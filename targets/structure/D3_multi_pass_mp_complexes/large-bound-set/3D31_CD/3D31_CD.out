core.init: Checking for fconfig files in pwd and ./rosetta/flags 
core.init: Rosetta version: 2018.10.post.dev+219.rfalford12.minimalmastermodifications.45420d5 45420d50022f91d2fe940278678c19770a2df5c9 git@github.com:RosettaCommons/main.git 2018-04-19T12:11:21
core.init: command: condor_exec.exe -in:file:s 3D31_CD/3D31_CD.pdb -nstruct 10 -score:weights ref2015.wts -mp:setup:spanfiles 3D31_CD/3D31_CD.span -packing:pack_missing_sidechains 0 -docking:partners C_D -out:path:all 3D31_CD
core.init: 'RNG device' seed mode, using '/dev/urandom', seed=1057468137 seed_offset=0 real_seed=1057468137
core.init.random: RandomGenerator:init: Normal mode, seed=1057468137 RG_type=mt19937
core.init: Resolved executable path: /home/ralford/apps/Rosetta-stable/main/source/build/src/debug/linux/3.10/64/x86/gcc/4.8/default/docking_prepack_protocol.default.linuxgccdebug
core.init: Looking for database based on location of executable: /home/ralford/apps/Rosetta-stable/main/database/
core.scoring.etable: Starting energy table calculation
core.scoring.etable: smooth_etable: changing atr/rep split to bottom of energy well
core.scoring.etable: smooth_etable: spline smoothing lj etables (maxdis = 6)
core.scoring.etable: smooth_etable: spline smoothing solvation etables (max_dis = 6)
core.scoring.etable: Finished calculating energy tables.
basic.io.database: Database file opened: scoring/score_functions/PairEPotential/pdb_pair_stats_fine
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBPoly1D.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBFadeIntervals.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBEval.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/DonStrength.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/AccStrength.csv
core.scoring.ScoreFunctionFactory: SCOREFUNCTION: ref2015.wts
core.chemical.GlobalResidueTypeSet: Finished initializing fa_standard residue type set.  Created 603 residue types
core.chemical.GlobalResidueTypeSet: Total time to initialize 9.19 seconds.
basic.io.database: Database file opened: scoring/score_functions/rama/fd/all.ramaProb
basic.io.database: Database file opened: scoring/score_functions/rama/fd/prepro.ramaProb
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.all.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.gly.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.pro.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.valile.txt
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/P_AA
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/P_AA_n
core.scoring.P_AA: shapovalov_lib::shap_p_aa_pp_smooth_level of 1( aka low_smooth ) got activated.
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/shapovalov/10deg/kappa131/a20.prop
protocols.jd2.PDBJobInputter: Instantiate PDBJobInputter
protocols.jd2.PDBJobInputter: PDBJobInputter::fill_jobs
protocols.jd2.PDBJobInputter: pushed 3D31_CD/3D31_CD.pdb nstruct indices 1 - 10
protocols.evaluation.ChiWellRmsdEvaluatorCreator: Evaluation Creator active ... 
protocols.jd2.JobDistributor: no more batches to process... 
protocols.jd2.JobDistributor: 10 jobs considered, 0 jobs attempted in 0 seconds
protocols.jd2.JobDistributor: no jobs were attempted, did you forget to pass -overwrite?
core.init: Checking for fconfig files in pwd and ./rosetta/flags 
core.init: Rosetta version: 2018.10.post.dev+219.rfalford12.minimalmastermodifications.45420d5 45420d50022f91d2fe940278678c19770a2df5c9 git@github.com:RosettaCommons/main.git 2018-04-19T12:11:21
core.init: command: condor_exec.exe -in:file:s 3D31_CD/3D31_CD.pdb -nstruct 10 -score:weights ref2015.wts -mp:setup:spanfiles 3D31_CD/3D31_CD.span -packing:pack_missing_sidechains 0 -docking:partners C_D -out:path:all 3D31_CD
core.init: 'RNG device' seed mode, using '/dev/urandom', seed=-485093181 seed_offset=0 real_seed=-485093181
core.init.random: RandomGenerator:init: Normal mode, seed=-485093181 RG_type=mt19937
core.init: Resolved executable path: /home/ralford/apps/Rosetta-stable/main/source/build/src/debug/linux/3.10/64/x86/gcc/4.8/default/docking_prepack_protocol.default.linuxgccdebug
core.init: Looking for database based on location of executable: /home/ralford/apps/Rosetta-stable/main/database/
core.scoring.etable: Starting energy table calculation
core.scoring.etable: smooth_etable: changing atr/rep split to bottom of energy well
core.scoring.etable: smooth_etable: spline smoothing lj etables (maxdis = 6)
core.scoring.etable: smooth_etable: spline smoothing solvation etables (max_dis = 6)
core.scoring.etable: Finished calculating energy tables.
basic.io.database: Database file opened: scoring/score_functions/PairEPotential/pdb_pair_stats_fine
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBPoly1D.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBFadeIntervals.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBEval.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/DonStrength.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/AccStrength.csv
core.scoring.ScoreFunctionFactory: SCOREFUNCTION: ref2015.wts
core.chemical.GlobalResidueTypeSet: Finished initializing fa_standard residue type set.  Created 603 residue types
core.chemical.GlobalResidueTypeSet: Total time to initialize 9.14 seconds.
basic.io.database: Database file opened: scoring/score_functions/rama/fd/all.ramaProb
basic.io.database: Database file opened: scoring/score_functions/rama/fd/prepro.ramaProb
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.all.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.gly.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.pro.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.valile.txt
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/P_AA
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/P_AA_n
core.scoring.P_AA: shapovalov_lib::shap_p_aa_pp_smooth_level of 1( aka low_smooth ) got activated.
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/shapovalov/10deg/kappa131/a20.prop
protocols.jd2.PDBJobInputter: Instantiate PDBJobInputter
protocols.jd2.PDBJobInputter: PDBJobInputter::fill_jobs
protocols.jd2.PDBJobInputter: pushed 3D31_CD/3D31_CD.pdb nstruct indices 1 - 10
protocols.evaluation.ChiWellRmsdEvaluatorCreator: Evaluation Creator active ... 
protocols.jd2.JobDistributor: no more batches to process... 
protocols.jd2.JobDistributor: 10 jobs considered, 0 jobs attempted in 0 seconds
protocols.jd2.JobDistributor: no jobs were attempted, did you forget to pass -overwrite?
core.init: Checking for fconfig files in pwd and ./rosetta/flags 
core.init: Rosetta version: 2018.10.post.dev+219.rfalford12.minimalmastermodifications.45420d5 45420d50022f91d2fe940278678c19770a2df5c9 git@github.com:RosettaCommons/main.git 2018-04-19T12:11:21
core.init: command: condor_exec.exe -in:file:s 3D31_CD/3D31_CD.pdb -nstruct 10 -score:weights ref2015.wts -mp:setup:spanfiles 3D31_CD/3D31_CD.span -packing:pack_missing_sidechains 0 -docking:partners C_D -out:path:all 3D31_CD
core.init: 'RNG device' seed mode, using '/dev/urandom', seed=-33856217 seed_offset=0 real_seed=-33856217
core.init.random: RandomGenerator:init: Normal mode, seed=-33856217 RG_type=mt19937
core.init: Resolved executable path: /home/ralford/apps/Rosetta-stable/main/source/build/src/debug/linux/3.10/64/x86/gcc/4.8/default/docking_prepack_protocol.default.linuxgccdebug
core.init: Looking for database based on location of executable: /home/ralford/apps/Rosetta-stable/main/database/
core.scoring.etable: Starting energy table calculation
core.scoring.etable: smooth_etable: changing atr/rep split to bottom of energy well
core.scoring.etable: smooth_etable: spline smoothing lj etables (maxdis = 6)
core.scoring.etable: smooth_etable: spline smoothing solvation etables (max_dis = 6)
core.scoring.etable: Finished calculating energy tables.
basic.io.database: Database file opened: scoring/score_functions/PairEPotential/pdb_pair_stats_fine
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBPoly1D.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBFadeIntervals.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBEval.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/DonStrength.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/AccStrength.csv
core.scoring.ScoreFunctionFactory: SCOREFUNCTION: ref2015.wts
core.chemical.GlobalResidueTypeSet: Finished initializing fa_standard residue type set.  Created 603 residue types
core.chemical.GlobalResidueTypeSet: Total time to initialize 12.78 seconds.
basic.io.database: Database file opened: scoring/score_functions/rama/fd/all.ramaProb
basic.io.database: Database file opened: scoring/score_functions/rama/fd/prepro.ramaProb
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.all.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.gly.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.pro.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.valile.txt
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/P_AA
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/P_AA_n
core.scoring.P_AA: shapovalov_lib::shap_p_aa_pp_smooth_level of 1( aka low_smooth ) got activated.
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/shapovalov/10deg/kappa131/a20.prop
protocols.jd2.PDBJobInputter: Instantiate PDBJobInputter
protocols.jd2.PDBJobInputter: PDBJobInputter::fill_jobs
protocols.jd2.PDBJobInputter: pushed 3D31_CD/3D31_CD.pdb nstruct indices 1 - 10
protocols.evaluation.ChiWellRmsdEvaluatorCreator: Evaluation Creator active ... 
protocols.jd2.JobDistributor: no more batches to process... 
protocols.jd2.JobDistributor: 10 jobs considered, 0 jobs attempted in 0 seconds
protocols.jd2.JobDistributor: no jobs were attempted, did you forget to pass -overwrite?
core.init: Checking for fconfig files in pwd and ./rosetta/flags 
core.init: Rosetta version: 2018.10.post.dev+219.rfalford12.minimalmastermodifications.45420d5 45420d50022f91d2fe940278678c19770a2df5c9 git@github.com:RosettaCommons/main.git 2018-04-19T12:11:21
core.init: command: condor_exec.exe -in:file:s 3D31_CD/3D31_CD.pdb -nstruct 10 -score:weights ref2015.wts -mp:setup:spanfiles 3D31_CD/3D31_CD.span -packing:pack_missing_sidechains 0 -docking:partners C_D -out:path:all 3D31_CD
core.init: 'RNG device' seed mode, using '/dev/urandom', seed=2045038767 seed_offset=0 real_seed=2045038767
core.init.random: RandomGenerator:init: Normal mode, seed=2045038767 RG_type=mt19937
core.init: Resolved executable path: /home/ralford/apps/Rosetta-stable/main/source/build/src/debug/linux/3.10/64/x86/gcc/4.8/default/docking_prepack_protocol.default.linuxgccdebug
core.init: Looking for database based on location of executable: /home/ralford/apps/Rosetta-stable/main/database/
core.scoring.etable: Starting energy table calculation
core.scoring.etable: smooth_etable: changing atr/rep split to bottom of energy well
core.scoring.etable: smooth_etable: spline smoothing lj etables (maxdis = 6)
core.scoring.etable: smooth_etable: spline smoothing solvation etables (max_dis = 6)
core.scoring.etable: Finished calculating energy tables.
basic.io.database: Database file opened: scoring/score_functions/PairEPotential/pdb_pair_stats_fine
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBPoly1D.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBFadeIntervals.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBEval.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/DonStrength.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/AccStrength.csv
core.scoring.ScoreFunctionFactory: SCOREFUNCTION: ref2015.wts
core.chemical.GlobalResidueTypeSet: Finished initializing fa_standard residue type set.  Created 603 residue types
core.chemical.GlobalResidueTypeSet: Total time to initialize 14.37 seconds.
basic.io.database: Database file opened: scoring/score_functions/rama/fd/all.ramaProb
basic.io.database: Database file opened: scoring/score_functions/rama/fd/prepro.ramaProb
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.all.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.gly.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.pro.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.valile.txt
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/P_AA
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/P_AA_n
core.scoring.P_AA: shapovalov_lib::shap_p_aa_pp_smooth_level of 1( aka low_smooth ) got activated.
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/shapovalov/10deg/kappa131/a20.prop
protocols.jd2.PDBJobInputter: Instantiate PDBJobInputter
protocols.jd2.PDBJobInputter: PDBJobInputter::fill_jobs
protocols.jd2.PDBJobInputter: pushed 3D31_CD/3D31_CD.pdb nstruct indices 1 - 10
protocols.evaluation.ChiWellRmsdEvaluatorCreator: Evaluation Creator active ... 
protocols.jd2.PDBJobInputter: PDBJobInputter::pose_from_job
protocols.jd2.PDBJobInputter: filling pose from PDB 3D31_CD/3D31_CD.pdb
core.import_pose.import_pose: File '3D31_CD/3D31_CD.pdb' automatically determined to be of type PDB
core.conformation.Conformation: [ WARNING ] missing heavyatom:  OXT on residue ARG:CtermProteinFull 248
core.conformation.Conformation: [ WARNING ] missing heavyatom:  OXT on residue ARG:CtermProteinFull 496
protocols.membrane.AddMembraneMover: =====================================================================
protocols.membrane.AddMembraneMover: ||           WELCOME TO THE WORLD OF MEMBRANE PROTEINS...          ||
protocols.membrane.AddMembraneMover: =====================================================================
protocols.membrane.AddMembraneMover: No membrane residue was found
protocols.membrane.AddMembraneMover: Adding a new membrane residue to the pose
protocols.membrane.AddMembraneMover: Adding a membrane residue representing the position of the membrane after residue 496
protocols.membrane.AddMembraneMover:    Edge   	   Jump     Jump #
          	0497--0001  002
0001--0248
          	0001--0249  001
0249--0496

core.conformation.membrane.SpanningTopology: Filling membrane spanning topology from spanfile 3D31_CD/3D31_CD.span
core.conformation.membrane.SpanningTopology: nres: 497
core.conformation.membrane.SpanningTopology: nres_topo: 496
core.conformation.membrane.SpanningTopology: total residues in spanfile: 496
core.conformation.membrane.SpanningTopology: Pose is in pose numbering scheme.
core.conformation.membrane.SpanningTopology: Total # of TM spans: 12
core.conformation.membrane.SpanningTopology: Number of residues in spanfile: 496
core.conformation.membrane.SpanningTopology: Span 1: start: 4, end: 30 orientation: 1
core.conformation.membrane.SpanningTopology: Span 2: start: 48, end: 71 orientation: 1
core.conformation.membrane.SpanningTopology: Span 3: start: 82, end: 93 orientation: 1
core.conformation.membrane.SpanningTopology: Span 4: start: 128, end: 148 orientation: 1
core.conformation.membrane.SpanningTopology: Span 5: start: 184, end: 197 orientation: 1
core.conformation.membrane.SpanningTopology: Span 6: start: 232, end: 247 orientation: 1
core.conformation.membrane.SpanningTopology: Span 7: start: 252, end: 278 orientation: 1
core.conformation.membrane.SpanningTopology: Span 8: start: 296, end: 319 orientation: 1
core.conformation.membrane.SpanningTopology: Span 9: start: 330, end: 341 orientation: 1
core.conformation.membrane.SpanningTopology: Span 10: start: 376, end: 396 orientation: 1
core.conformation.membrane.SpanningTopology: Span 11: start: 432, end: 445 orientation: 1
core.conformation.membrane.SpanningTopology: Span 12: start: 480, end: 493 orientation: 1
protocols.membrane.AddMembraneMover: MembraneInfo:
protocols.membrane.AddMembraneMover: MembraneInfo: Information about this Membrane Protein
protocols.membrane.AddMembraneMover: Membrane Residue Num: 497
protocols.membrane.AddMembraneMover: Membrane Fold Tree Jump: 2
protocols.membrane.AddMembraneMover: Membrane Thickness: 15
protocols.membrane.AddMembraneMover: Membrane core: 15
protocols.membrane.AddMembraneMover: Membrane Steepness: 10
protocols.membrane.AddMembraneMover: Membrane Spanning Topology 
core.conformation.membrane.SpanningTopology: Total # of TM spans: 12
core.conformation.membrane.SpanningTopology: Number of residues in spanfile: 496
core.conformation.membrane.SpanningTopology: Span 1: start: 4, end: 30 orientation: 1
core.conformation.membrane.SpanningTopology: Span 2: start: 48, end: 71 orientation: 1
core.conformation.membrane.SpanningTopology: Span 3: start: 82, end: 93 orientation: 1
core.conformation.membrane.SpanningTopology: Span 4: start: 128, end: 148 orientation: 1
core.conformation.membrane.SpanningTopology: Span 5: start: 184, end: 197 orientation: 1
core.conformation.membrane.SpanningTopology: Span 6: start: 232, end: 247 orientation: 1
core.conformation.membrane.SpanningTopology: Span 7: start: 252, end: 278 orientation: 1
core.conformation.membrane.SpanningTopology: Span 8: start: 296, end: 319 orientation: 1
core.conformation.membrane.SpanningTopology: Span 9: start: 330, end: 341 orientation: 1
core.conformation.membrane.SpanningTopology: Span 10: start: 376, end: 396 orientation: 1
core.conformation.membrane.SpanningTopology: Span 11: start: 432, end: 445 orientation: 1
core.conformation.membrane.SpanningTopology: Span 12: start: 480, end: 493 orientation: 1
protocols.membrane.SetMembranePositionMover: Calling SetMembranePositionMover
protocols.membrane.SetMembranePositionMover: Starting foldtree: Is membrane fixed? 1
protocols.membrane.SetMembranePositionMover:    Edge   	   Jump     Jump #
          	0497--0001  002
0001--0248
          	0001--0249  001
0249--0496

protocols.membrane.SetMembranePositionMover: Final foldtree: Is membrane fixed? 1
protocols.membrane.SetMembranePositionMover:    Edge   	   Jump     Jump #
          	0497--0001  002
0001--0248
          	0001--0249  001
0249--0496

protocols.membrane.AddMembraneMover: Final foldtree: Is membrane fixed? 1
protocols.membrane.AddMembraneMover:    Edge   	   Jump     Jump #
          	0497--0001  002
0001--0248
          	0001--0249  001
0249--0496

protocols.membrane.util: chainid 1 chain C
protocols.membrane.util: com (3.63263, -5.9961, -0.491211)
protocols.membrane.util: chainid 2 chain D
protocols.membrane.util: com (-4.02727, 6.33257, -0.311593)
protocols.membrane.util: partners C_D
protocols.membrane.util: mem rsd 497
protocols.membrane.util: anchors[1] 195
protocols.membrane.util:    Edge   	   Jump     Jump #
          	0497--0195  001
0195--0248
          	0195--0443  002
0443--0496
0443--0249
0195--0001

core.conformation.membrane.MembraneInfo: Setting a new membrane jump number in MembraneInfo to 1.
core.conformation.membrane.MembraneInfo: Use with caution!
core.scoring.etable: Starting energy table calculation
core.scoring.etable: smooth_etable: changing atr/rep split to bottom of energy well
core.scoring.etable: smooth_etable: spline smoothing lj etables (maxdis = 6)
core.scoring.etable: smooth_etable: spline smoothing solvation etables (max_dis = 6)
core.scoring.etable: Finished calculating energy tables.
core.scoring.etable: Using alternate parameters: LK_DGFREE in MembEtable construction.
core.scoring.etable: Using alternate parameters: MEMB_LK_DGFREE in MembEtable construction.
core.scoring.etable: Using alternate parameters: LK_DGREFCE in MembEtable construction.
core.scoring.etable: Using alternate parameters: MEMB_LK_DGREFCE in MembEtable construction.
core.scoring.etable: Starting membrane specific energy table calculation
core.scoring.etable: smooth_etable: spline smoothing solvation etables (max_dis = 6)
core.scoring.etable: Finished calculating membrane specific energy tables.
basic.io.database: Database file opened: scoring/score_functions/MembranePotential/CEN10_Menv_smooth_log.txt
core.scoring.ramachandran: shapovalov_lib::shap_rama_smooth_level of 4( aka highest_smooth ) got activated.
basic.io.database: Database file opened: scoring/score_functions/rama/shapovalov/kappa25/all.ramaProb
protocols.membrane.geometry.Embedding: Constructing Embedding object from topology and pose
protocols.membrane.geometry.Embedding: Computing membrane embedding from TMspans: 
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 4 to 30
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 4 to 30
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 48 to 71
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 82 to 93
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] If your starting PDB is already translated into the 
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] membrane, then your TMspan does not span the membrane!
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 128 to 148
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 184 to 197
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 232 to 247
protocols.membrane.geometry.Embedding: Span Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (24.251, 6.6675, 0.1295), normal: (0.162989, -0.609247, 0.776049)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-2.5345, -11.9815, 0.87), normal: (0.477122, -0.139837, 0.867641)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-11.7215, 0.09, -7.0915), normal: (0.682858, 0.119161, 0.720768)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-6.781, -12.4095, -0.697), normal: (0.0266688, -0.281538, 0.959179)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (1.5015, -11.2115, -4.2885), normal: (0.102887, 0.114469, 0.988085)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (11.5675, -11.568, 3.755), normal: (0.114838, 0.270595, 0.955819)
protocols.membrane.geometry.Embedding: Total Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (2.71383, -6.7355, -1.22042), normal: (0.283895, -0.0953458, 0.954103)
protocols.membrane.geometry.Embedding: Constructing Embedding object from topology and pose
protocols.membrane.geometry.Embedding: Computing membrane embedding from TMspans: 
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 252 to 278
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 252 to 278
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 296 to 319
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 330 to 341
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] If your starting PDB is already translated into the 
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] membrane, then your TMspan does not span the membrane!
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 376 to 396
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 432 to 445
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 480 to 493
protocols.membrane.geometry.Embedding: Span Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-24.787, -6.1335, 0.2155), normal: (-0.162189, 0.60963, 0.775916)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (2.0265, 12.4695, 0.9575), normal: (-0.476814, 0.140272, 0.867739)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (11.1935, 0.3845, -7.0085), normal: (-0.683014, -0.117945, 0.72082)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (6.2715, 12.8935, -0.6135), normal: (-0.0258776, 0.282035, 0.959055)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-2.0105, 11.7155, -4.202), normal: (-0.102445, -0.114521, 0.988124)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-13.665, 10.667, 5.2145), normal: (0.0256162, -0.173824, 0.984444)
protocols.membrane.geometry.Embedding: Total Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-3.49517, 6.99942, -0.906083), normal: (-0.258104, 0.113343, 0.959446)
protocols.moves.RigidBodyMover: Translate: Jump (before): RT -0.753971 0.462704 -0.466297 0.462547 -0.130093 -0.876998 -0.466452 -0.876916 -0.115936 12.4153 0.284258 6.69696  
protocols.moves.RigidBodyMover: Translate: Jump (after):  RT -0.753971 0.462704 -0.466297 0.462547 -0.130093 -0.876998 -0.466452 -0.876916 -0.115936 -918.529 168.829 -317.239  
core.pack.task: Packer task: initialize from command line() 
basic.io.database: Database file opened: scoring/score_functions/elec_cp_reps.dat
core.scoring.elec.util: Read 40 countpair representative atoms
core.pack.dunbrack.RotamerLibrary: shapovalov_lib_fixes_enable option is true.
core.pack.dunbrack.RotamerLibrary: shapovalov_lib::shap_dun10_smooth_level of 1( aka lowest_smooth ) got activated.
core.pack.dunbrack.RotamerLibrary: Binary rotamer library selected: /home/ralford/apps/Rosetta-stable/main/database/rotamer/shapovalov/StpDwn_0-0-0/Dunbrack10.lib.bin
core.pack.dunbrack.RotamerLibrary: Using Dunbrack library binary file '/home/ralford/apps/Rosetta-stable/main/database/rotamer/shapovalov/StpDwn_0-0-0/Dunbrack10.lib.bin'.
core.pack.dunbrack.RotamerLibrary: Dunbrack 2010 library took 1.71 seconds to load from binary
core.pack.pack_rotamers: built 5155 rotamers at 497 positions.
core.pack.interaction_graph.interaction_graph_factory: Instantiating DensePDInteractionGraph
core.pack.interaction_graph.interaction_graph_factory: IG: 4030520 bytes
core.pack.annealer.FixbbSimAnnealer: pack_rotamers run final: PLTFVFSFLLLVLFLFIFLTLSNMIFEQITEDFSGLVKAAGNRSVISSIFLSLYAGFLATLLALLLGAPTGYILARFDFPGKRLVESIIDVPVVVPHTVAGIALLTVFGSRGLIGEPLESYIQFRDALPGIVVAMLFVSMPYLANSAREGFKSVDPRLENAARSLGAPLWKAFFFVTLPLSARYLLIGSVMTWARAISEFGAVVILAYYPMVGPTLIYDRFISYGLSASRPIAVLLILVTLSIFLVIRPLTFVFSFLLLVLFLFIFLTLSNMIFEQITEDFSGLVKAAGNRSVISSIFLSLYAGFLATLLALLLGAPTGYILARFDFPGKRLVESIIDVPVVVPHTVAGIALLTVFGSRGLIGEPLESYIQFRDALPGIVVAMLFVSMPYLANSAREGFKSVDPRLENAARSLGAPLWKAFFFVTLPLSARYLLIGSVMTWARAISEFGAVVILAYYPMVGPTLIYDRFISYGLSASRPIAVLLILVTLSIFLVIRZ, best_energy: 385.004
protocols.membrane.geometry.Embedding: Constructing Embedding object from topology and pose
protocols.membrane.geometry.Embedding: Computing membrane embedding from TMspans: 
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 4 to 30
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 4 to 30
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 48 to 71
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 82 to 93
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] If your starting PDB is already translated into the 
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] membrane, then your TMspan does not span the membrane!
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 128 to 148
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 184 to 197
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 232 to 247
protocols.membrane.geometry.Embedding: Span Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (24.251, 6.6675, 0.1295), normal: (0.162989, -0.609247, 0.776049)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-2.5345, -11.9815, 0.87), normal: (0.477122, -0.139837, 0.867641)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-11.7215, 0.09, -7.0915), normal: (0.682858, 0.119161, 0.720768)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-6.781, -12.4095, -0.697), normal: (0.0266688, -0.281538, 0.959179)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (1.5015, -11.2115, -4.2885), normal: (0.102887, 0.114469, 0.988085)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (11.5675, -11.568, 3.755), normal: (0.114838, 0.270595, 0.955819)
protocols.membrane.geometry.Embedding: Total Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (2.71383, -6.7355, -1.22042), normal: (0.283895, -0.0953458, 0.954103)
protocols.membrane.geometry.Embedding: Constructing Embedding object from topology and pose
protocols.membrane.geometry.Embedding: Computing membrane embedding from TMspans: 
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 252 to 278
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 252 to 278
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 296 to 319
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 330 to 341
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] If your starting PDB is already translated into the 
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] membrane, then your TMspan does not span the membrane!
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 376 to 396
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 432 to 445
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 480 to 493
protocols.membrane.geometry.Embedding: Span Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (387.138, -917.351, 0.2155), normal: (-0.162189, 0.60963, 0.775916)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (413.951, -898.748, 0.9575), normal: (-0.476814, 0.140272, 0.867739)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (423.118, -910.833, -7.0085), normal: (-0.683014, -0.117945, 0.72082)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (418.196, -898.324, -0.6135), normal: (-0.0258776, 0.282035, 0.959055)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (409.914, -899.502, -4.202), normal: (-0.102445, -0.114521, 0.988124)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (398.26, -900.551, 5.2145), normal: (0.0256162, -0.173824, 0.984444)
protocols.membrane.geometry.Embedding: Total Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (408.43, -904.218, -0.906083), normal: (-0.258104, 0.113343, 0.959446)
protocols.moves.RigidBodyMover: Translate: Jump (before): RT -0.753971 0.462704 -0.466297 0.462547 -0.130093 -0.876998 -0.466452 -0.876916 -0.115936 -918.529 168.829 -317.239  
protocols.moves.RigidBodyMover: Translate: Jump (after):  RT -0.753971 0.462704 -0.466297 0.462547 -0.130093 -0.876998 -0.466452 -0.876916 -0.115936 12.4153 0.284258 6.69696  
core.util.switchresiduetypeset: [ WARNING ] When switching to a fa_standard ResidueTypeSet:  Pose already contains fa_standard ResidueTypes.
protocols.jd2.JobDistributor: 3D31_CD_0001 reported success in 1155 seconds
protocols.jd2.JobDistributor: no more batches to process... 
protocols.jd2.JobDistributor: 10 jobs considered, 1 jobs attempted in 1156 seconds
core.init: Checking for fconfig files in pwd and ./rosetta/flags 
core.init: Rosetta version: 2018.10.post.dev+219.rfalford12.minimalmastermodifications.45420d5 45420d50022f91d2fe940278678c19770a2df5c9 git@github.com:RosettaCommons/main.git 2018-04-19T12:11:21
core.init: command: condor_exec.exe -in:file:s 3D31_CD/3D31_CD.pdb -nstruct 10 -score:weights ref2015.wts -mp:setup:spanfiles 3D31_CD/3D31_CD.span -packing:pack_missing_sidechains 0 -docking:partners C_D -out:path:all 3D31_CD
core.init: 'RNG device' seed mode, using '/dev/urandom', seed=-265884680 seed_offset=0 real_seed=-265884680
core.init.random: RandomGenerator:init: Normal mode, seed=-265884680 RG_type=mt19937
core.init: Resolved executable path: /home/ralford/apps/Rosetta-stable/main/source/build/src/debug/linux/3.10/64/x86/gcc/4.8/default/docking_prepack_protocol.default.linuxgccdebug
core.init: Looking for database based on location of executable: /home/ralford/apps/Rosetta-stable/main/database/
core.scoring.etable: Starting energy table calculation
core.scoring.etable: smooth_etable: changing atr/rep split to bottom of energy well
core.scoring.etable: smooth_etable: spline smoothing lj etables (maxdis = 6)
core.scoring.etable: smooth_etable: spline smoothing solvation etables (max_dis = 6)
core.scoring.etable: Finished calculating energy tables.
basic.io.database: Database file opened: scoring/score_functions/PairEPotential/pdb_pair_stats_fine
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBPoly1D.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBFadeIntervals.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBEval.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/DonStrength.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/AccStrength.csv
core.scoring.ScoreFunctionFactory: SCOREFUNCTION: ref2015.wts
core.chemical.GlobalResidueTypeSet: Finished initializing fa_standard residue type set.  Created 603 residue types
core.chemical.GlobalResidueTypeSet: Total time to initialize 14.39 seconds.
basic.io.database: Database file opened: scoring/score_functions/rama/fd/all.ramaProb
basic.io.database: Database file opened: scoring/score_functions/rama/fd/prepro.ramaProb
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.all.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.gly.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.pro.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.valile.txt
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/P_AA
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/P_AA_n
core.scoring.P_AA: shapovalov_lib::shap_p_aa_pp_smooth_level of 1( aka low_smooth ) got activated.
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/shapovalov/10deg/kappa131/a20.prop
protocols.jd2.PDBJobInputter: Instantiate PDBJobInputter
protocols.jd2.PDBJobInputter: PDBJobInputter::fill_jobs
protocols.jd2.PDBJobInputter: pushed 3D31_CD/3D31_CD.pdb nstruct indices 1 - 10
protocols.evaluation.ChiWellRmsdEvaluatorCreator: Evaluation Creator active ... 
protocols.jd2.PDBJobInputter: PDBJobInputter::pose_from_job
protocols.jd2.PDBJobInputter: filling pose from PDB 3D31_CD/3D31_CD.pdb
core.import_pose.import_pose: File '3D31_CD/3D31_CD.pdb' automatically determined to be of type PDB
core.conformation.Conformation: [ WARNING ] missing heavyatom:  OXT on residue ARG:CtermProteinFull 248
core.conformation.Conformation: [ WARNING ] missing heavyatom:  OXT on residue ARG:CtermProteinFull 496
protocols.membrane.AddMembraneMover: =====================================================================
protocols.membrane.AddMembraneMover: ||           WELCOME TO THE WORLD OF MEMBRANE PROTEINS...          ||
protocols.membrane.AddMembraneMover: =====================================================================
protocols.membrane.AddMembraneMover: No membrane residue was found
protocols.membrane.AddMembraneMover: Adding a new membrane residue to the pose
protocols.membrane.AddMembraneMover: Adding a membrane residue representing the position of the membrane after residue 496
protocols.membrane.AddMembraneMover:    Edge   	   Jump     Jump #
          	0497--0001  002
0001--0248
          	0001--0249  001
0249--0496

core.conformation.membrane.SpanningTopology: Filling membrane spanning topology from spanfile 3D31_CD/3D31_CD.span
core.conformation.membrane.SpanningTopology: nres: 497
core.conformation.membrane.SpanningTopology: nres_topo: 496
core.conformation.membrane.SpanningTopology: total residues in spanfile: 496
core.conformation.membrane.SpanningTopology: Pose is in pose numbering scheme.
core.conformation.membrane.SpanningTopology: Total # of TM spans: 12
core.conformation.membrane.SpanningTopology: Number of residues in spanfile: 496
core.conformation.membrane.SpanningTopology: Span 1: start: 4, end: 30 orientation: 1
core.conformation.membrane.SpanningTopology: Span 2: start: 48, end: 71 orientation: 1
core.conformation.membrane.SpanningTopology: Span 3: start: 82, end: 93 orientation: 1
core.conformation.membrane.SpanningTopology: Span 4: start: 128, end: 148 orientation: 1
core.conformation.membrane.SpanningTopology: Span 5: start: 184, end: 197 orientation: 1
core.conformation.membrane.SpanningTopology: Span 6: start: 232, end: 247 orientation: 1
core.conformation.membrane.SpanningTopology: Span 7: start: 252, end: 278 orientation: 1
core.conformation.membrane.SpanningTopology: Span 8: start: 296, end: 319 orientation: 1
core.conformation.membrane.SpanningTopology: Span 9: start: 330, end: 341 orientation: 1
core.conformation.membrane.SpanningTopology: Span 10: start: 376, end: 396 orientation: 1
core.conformation.membrane.SpanningTopology: Span 11: start: 432, end: 445 orientation: 1
core.conformation.membrane.SpanningTopology: Span 12: start: 480, end: 493 orientation: 1
protocols.membrane.AddMembraneMover: MembraneInfo:
protocols.membrane.AddMembraneMover: MembraneInfo: Information about this Membrane Protein
protocols.membrane.AddMembraneMover: Membrane Residue Num: 497
protocols.membrane.AddMembraneMover: Membrane Fold Tree Jump: 2
protocols.membrane.AddMembraneMover: Membrane Thickness: 15
protocols.membrane.AddMembraneMover: Membrane core: 15
protocols.membrane.AddMembraneMover: Membrane Steepness: 10
protocols.membrane.AddMembraneMover: Membrane Spanning Topology 
core.conformation.membrane.SpanningTopology: Total # of TM spans: 12
core.conformation.membrane.SpanningTopology: Number of residues in spanfile: 496
core.conformation.membrane.SpanningTopology: Span 1: start: 4, end: 30 orientation: 1
core.conformation.membrane.SpanningTopology: Span 2: start: 48, end: 71 orientation: 1
core.conformation.membrane.SpanningTopology: Span 3: start: 82, end: 93 orientation: 1
core.conformation.membrane.SpanningTopology: Span 4: start: 128, end: 148 orientation: 1
core.conformation.membrane.SpanningTopology: Span 5: start: 184, end: 197 orientation: 1
core.conformation.membrane.SpanningTopology: Span 6: start: 232, end: 247 orientation: 1
core.conformation.membrane.SpanningTopology: Span 7: start: 252, end: 278 orientation: 1
core.conformation.membrane.SpanningTopology: Span 8: start: 296, end: 319 orientation: 1
core.conformation.membrane.SpanningTopology: Span 9: start: 330, end: 341 orientation: 1
core.conformation.membrane.SpanningTopology: Span 10: start: 376, end: 396 orientation: 1
core.conformation.membrane.SpanningTopology: Span 11: start: 432, end: 445 orientation: 1
core.conformation.membrane.SpanningTopology: Span 12: start: 480, end: 493 orientation: 1
protocols.membrane.SetMembranePositionMover: Calling SetMembranePositionMover
protocols.membrane.SetMembranePositionMover: Starting foldtree: Is membrane fixed? 1
protocols.membrane.SetMembranePositionMover:    Edge   	   Jump     Jump #
          	0497--0001  002
0001--0248
          	0001--0249  001
0249--0496

protocols.membrane.SetMembranePositionMover: Final foldtree: Is membrane fixed? 1
protocols.membrane.SetMembranePositionMover:    Edge   	   Jump     Jump #
          	0497--0001  002
0001--0248
          	0001--0249  001
0249--0496

protocols.membrane.AddMembraneMover: Final foldtree: Is membrane fixed? 1
protocols.membrane.AddMembraneMover:    Edge   	   Jump     Jump #
          	0497--0001  002
0001--0248
          	0001--0249  001
0249--0496

protocols.membrane.util: chainid 1 chain C
protocols.membrane.util: com (3.63263, -5.9961, -0.491211)
protocols.membrane.util: chainid 2 chain D
protocols.membrane.util: com (-4.02727, 6.33257, -0.311593)
protocols.membrane.util: partners C_D
protocols.membrane.util: mem rsd 497
protocols.membrane.util: anchors[1] 195
protocols.membrane.util:    Edge   	   Jump     Jump #
          	0497--0195  001
0195--0248
          	0195--0443  002
0443--0496
0443--0249
0195--0001

core.conformation.membrane.MembraneInfo: Setting a new membrane jump number in MembraneInfo to 1.
core.conformation.membrane.MembraneInfo: Use with caution!
core.scoring.etable: Starting energy table calculation
core.scoring.etable: smooth_etable: changing atr/rep split to bottom of energy well
core.scoring.etable: smooth_etable: spline smoothing lj etables (maxdis = 6)
core.scoring.etable: smooth_etable: spline smoothing solvation etables (max_dis = 6)
core.scoring.etable: Finished calculating energy tables.
core.scoring.etable: Using alternate parameters: LK_DGFREE in MembEtable construction.
core.scoring.etable: Using alternate parameters: MEMB_LK_DGFREE in MembEtable construction.
core.scoring.etable: Using alternate parameters: LK_DGREFCE in MembEtable construction.
core.scoring.etable: Using alternate parameters: MEMB_LK_DGREFCE in MembEtable construction.
core.scoring.etable: Starting membrane specific energy table calculation
core.scoring.etable: smooth_etable: spline smoothing solvation etables (max_dis = 6)
core.scoring.etable: Finished calculating membrane specific energy tables.
basic.io.database: Database file opened: scoring/score_functions/MembranePotential/CEN10_Menv_smooth_log.txt
core.scoring.ramachandran: shapovalov_lib::shap_rama_smooth_level of 4( aka highest_smooth ) got activated.
basic.io.database: Database file opened: scoring/score_functions/rama/shapovalov/kappa25/all.ramaProb
protocols.membrane.geometry.Embedding: Constructing Embedding object from topology and pose
protocols.membrane.geometry.Embedding: Computing membrane embedding from TMspans: 
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 4 to 30
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 4 to 30
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 48 to 71
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 82 to 93
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] If your starting PDB is already translated into the 
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] membrane, then your TMspan does not span the membrane!
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 128 to 148
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 184 to 197
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 232 to 247
protocols.membrane.geometry.Embedding: Span Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (24.251, 6.6675, 0.1295), normal: (0.162989, -0.609247, 0.776049)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-2.5345, -11.9815, 0.87), normal: (0.477122, -0.139837, 0.867641)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-11.7215, 0.09, -7.0915), normal: (0.682858, 0.119161, 0.720768)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-6.781, -12.4095, -0.697), normal: (0.0266688, -0.281538, 0.959179)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (1.5015, -11.2115, -4.2885), normal: (0.102887, 0.114469, 0.988085)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (11.5675, -11.568, 3.755), normal: (0.114838, 0.270595, 0.955819)
protocols.membrane.geometry.Embedding: Total Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (2.71383, -6.7355, -1.22042), normal: (0.283895, -0.0953458, 0.954103)
protocols.membrane.geometry.Embedding: Constructing Embedding object from topology and pose
protocols.membrane.geometry.Embedding: Computing membrane embedding from TMspans: 
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 252 to 278
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 252 to 278
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 296 to 319
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 330 to 341
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] If your starting PDB is already translated into the 
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] membrane, then your TMspan does not span the membrane!
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 376 to 396
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 432 to 445
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 480 to 493
protocols.membrane.geometry.Embedding: Span Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-24.787, -6.1335, 0.2155), normal: (-0.162189, 0.60963, 0.775916)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (2.0265, 12.4695, 0.9575), normal: (-0.476814, 0.140272, 0.867739)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (11.1935, 0.3845, -7.0085), normal: (-0.683014, -0.117945, 0.72082)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (6.2715, 12.8935, -0.6135), normal: (-0.0258776, 0.282035, 0.959055)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-2.0105, 11.7155, -4.202), normal: (-0.102445, -0.114521, 0.988124)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-13.665, 10.667, 5.2145), normal: (0.0256162, -0.173824, 0.984444)
protocols.membrane.geometry.Embedding: Total Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-3.49517, 6.99942, -0.906083), normal: (-0.258104, 0.113343, 0.959446)
protocols.moves.RigidBodyMover: Translate: Jump (before): RT -0.753971 0.462704 -0.466297 0.462547 -0.130093 -0.876998 -0.466452 -0.876916 -0.115936 12.4153 0.284258 6.69696  
protocols.moves.RigidBodyMover: Translate: Jump (after):  RT -0.753971 0.462704 -0.466297 0.462547 -0.130093 -0.876998 -0.466452 -0.876916 -0.115936 -918.529 168.829 -317.239  
core.pack.task: Packer task: initialize from command line() 
basic.io.database: Database file opened: scoring/score_functions/elec_cp_reps.dat
core.scoring.elec.util: Read 40 countpair representative atoms
core.pack.dunbrack.RotamerLibrary: shapovalov_lib_fixes_enable option is true.
core.pack.dunbrack.RotamerLibrary: shapovalov_lib::shap_dun10_smooth_level of 1( aka lowest_smooth ) got activated.
core.pack.dunbrack.RotamerLibrary: Binary rotamer library selected: /home/ralford/apps/Rosetta-stable/main/database/rotamer/shapovalov/StpDwn_0-0-0/Dunbrack10.lib.bin
core.pack.dunbrack.RotamerLibrary: Using Dunbrack library binary file '/home/ralford/apps/Rosetta-stable/main/database/rotamer/shapovalov/StpDwn_0-0-0/Dunbrack10.lib.bin'.
core.pack.dunbrack.RotamerLibrary: Dunbrack 2010 library took 1.66 seconds to load from binary
core.pack.pack_rotamers: built 5155 rotamers at 497 positions.
core.pack.interaction_graph.interaction_graph_factory: Instantiating DensePDInteractionGraph
core.pack.interaction_graph.interaction_graph_factory: IG: 4030520 bytes
core.pack.annealer.FixbbSimAnnealer: pack_rotamers run final: PLTFVFSFLLLVLFLFIFLTLSNMIFEQITEDFSGLVKAAGNRSVISSIFLSLYAGFLATLLALLLGAPTGYILARFDFPGKRLVESIIDVPVVVPHTVAGIALLTVFGSRGLIGEPLESYIQFRDALPGIVVAMLFVSMPYLANSAREGFKSVDPRLENAARSLGAPLWKAFFFVTLPLSARYLLIGSVMTWARAISEFGAVVILAYYPMVGPTLIYDRFISYGLSASRPIAVLLILVTLSIFLVIRPLTFVFSFLLLVLFLFIFLTLSNMIFEQITEDFSGLVKAAGNRSVISSIFLSLYAGFLATLLALLLGAPTGYILARFDFPGKRLVESIIDVPVVVPHTVAGIALLTVFGSRGLIGEPLESYIQFRDALPGIVVAMLFVSMPYLANSAREGFKSVDPRLENAARSLGAPLWKAFFFVTLPLSARYLLIGSVMTWARAISEFGAVVILAYYPMVGPTLIYDRFISYGLSASRPIAVLLILVTLSIFLVIRZ, best_energy: 374.824
protocols.membrane.geometry.Embedding: Constructing Embedding object from topology and pose
protocols.membrane.geometry.Embedding: Computing membrane embedding from TMspans: 
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 4 to 30
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 4 to 30
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 48 to 71
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 82 to 93
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] If your starting PDB is already translated into the 
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] membrane, then your TMspan does not span the membrane!
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 128 to 148
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 184 to 197
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 232 to 247
protocols.membrane.geometry.Embedding: Span Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (24.251, 6.6675, 0.1295), normal: (0.162989, -0.609247, 0.776049)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-2.5345, -11.9815, 0.87), normal: (0.477122, -0.139837, 0.867641)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-11.7215, 0.09, -7.0915), normal: (0.682858, 0.119161, 0.720768)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-6.781, -12.4095, -0.697), normal: (0.0266688, -0.281538, 0.959179)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (1.5015, -11.2115, -4.2885), normal: (0.102887, 0.114469, 0.988085)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (11.5675, -11.568, 3.755), normal: (0.114838, 0.270595, 0.955819)
protocols.membrane.geometry.Embedding: Total Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (2.71383, -6.7355, -1.22042), normal: (0.283895, -0.0953458, 0.954103)
protocols.membrane.geometry.Embedding: Constructing Embedding object from topology and pose
protocols.membrane.geometry.Embedding: Computing membrane embedding from TMspans: 
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 252 to 278
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 252 to 278
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 296 to 319
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 330 to 341
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] If your starting PDB is already translated into the 
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] membrane, then your TMspan does not span the membrane!
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 376 to 396
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 432 to 445
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 480 to 493
protocols.membrane.geometry.Embedding: Span Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (387.138, -917.351, 0.2155), normal: (-0.162189, 0.60963, 0.775916)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (413.951, -898.748, 0.9575), normal: (-0.476814, 0.140272, 0.867739)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (423.118, -910.833, -7.0085), normal: (-0.683014, -0.117945, 0.72082)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (418.196, -898.324, -0.6135), normal: (-0.0258776, 0.282035, 0.959055)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (409.914, -899.502, -4.202), normal: (-0.102445, -0.114521, 0.988124)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (398.26, -900.551, 5.2145), normal: (0.0256162, -0.173824, 0.984444)
protocols.membrane.geometry.Embedding: Total Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (408.43, -904.218, -0.906083), normal: (-0.258104, 0.113343, 0.959446)
protocols.moves.RigidBodyMover: Translate: Jump (before): RT -0.753971 0.462704 -0.466297 0.462547 -0.130093 -0.876998 -0.466452 -0.876916 -0.115936 -918.529 168.829 -317.239  
protocols.moves.RigidBodyMover: Translate: Jump (after):  RT -0.753971 0.462704 -0.466297 0.462547 -0.130093 -0.876998 -0.466452 -0.876916 -0.115936 12.4153 0.284258 6.69696  
core.util.switchresiduetypeset: [ WARNING ] When switching to a fa_standard ResidueTypeSet:  Pose already contains fa_standard ResidueTypes.
protocols.jd2.JobDistributor: 3D31_CD_0001 reported success in 1176 seconds
protocols.jd2.JobDistributor: no more batches to process... 
protocols.jd2.JobDistributor: 10 jobs considered, 1 jobs attempted in 1177 seconds
core.init: Checking for fconfig files in pwd and ./rosetta/flags 
core.init: Rosetta version: 2018.10.post.dev+219.rfalford12.minimalmastermodifications.45420d5 45420d50022f91d2fe940278678c19770a2df5c9 git@github.com:RosettaCommons/main.git 2018-04-19T12:11:21
core.init: command: condor_exec.exe -in:file:s 3D31_CD/3D31_CD.pdb -nstruct 10 -score:weights ref2015.wts -mp:setup:spanfiles 3D31_CD/3D31_CD.span -packing:pack_missing_sidechains 0 -docking:partners C_D -out:path:all 3D31_CD
core.init: 'RNG device' seed mode, using '/dev/urandom', seed=689581228 seed_offset=0 real_seed=689581228
core.init.random: RandomGenerator:init: Normal mode, seed=689581228 RG_type=mt19937
core.init: Resolved executable path: /home/ralford/apps/Rosetta-stable/main/source/build/src/debug/linux/3.10/64/x86/gcc/4.8/default/docking_prepack_protocol.default.linuxgccdebug
core.init: Looking for database based on location of executable: /home/ralford/apps/Rosetta-stable/main/database/
core.scoring.etable: Starting energy table calculation
core.scoring.etable: smooth_etable: changing atr/rep split to bottom of energy well
core.scoring.etable: smooth_etable: spline smoothing lj etables (maxdis = 6)
core.scoring.etable: smooth_etable: spline smoothing solvation etables (max_dis = 6)
core.scoring.etable: Finished calculating energy tables.
basic.io.database: Database file opened: scoring/score_functions/PairEPotential/pdb_pair_stats_fine
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBPoly1D.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBFadeIntervals.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBEval.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/DonStrength.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/AccStrength.csv
core.scoring.ScoreFunctionFactory: SCOREFUNCTION: ref2015.wts
core.chemical.GlobalResidueTypeSet: Finished initializing fa_standard residue type set.  Created 603 residue types
core.chemical.GlobalResidueTypeSet: Total time to initialize 14.37 seconds.
basic.io.database: Database file opened: scoring/score_functions/rama/fd/all.ramaProb
basic.io.database: Database file opened: scoring/score_functions/rama/fd/prepro.ramaProb
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.all.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.gly.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.pro.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.valile.txt
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/P_AA
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/P_AA_n
core.scoring.P_AA: shapovalov_lib::shap_p_aa_pp_smooth_level of 1( aka low_smooth ) got activated.
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/shapovalov/10deg/kappa131/a20.prop
protocols.jd2.PDBJobInputter: Instantiate PDBJobInputter
protocols.jd2.PDBJobInputter: PDBJobInputter::fill_jobs
protocols.jd2.PDBJobInputter: pushed 3D31_CD/3D31_CD.pdb nstruct indices 1 - 10
protocols.evaluation.ChiWellRmsdEvaluatorCreator: Evaluation Creator active ... 
protocols.jd2.PDBJobInputter: PDBJobInputter::pose_from_job
protocols.jd2.PDBJobInputter: filling pose from PDB 3D31_CD/3D31_CD.pdb
core.import_pose.import_pose: File '3D31_CD/3D31_CD.pdb' automatically determined to be of type PDB
core.conformation.Conformation: [ WARNING ] missing heavyatom:  OXT on residue ARG:CtermProteinFull 248
core.conformation.Conformation: [ WARNING ] missing heavyatom:  OXT on residue ARG:CtermProteinFull 496
protocols.membrane.AddMembraneMover: =====================================================================
protocols.membrane.AddMembraneMover: ||           WELCOME TO THE WORLD OF MEMBRANE PROTEINS...          ||
protocols.membrane.AddMembraneMover: =====================================================================
protocols.membrane.AddMembraneMover: No membrane residue was found
protocols.membrane.AddMembraneMover: Adding a new membrane residue to the pose
protocols.membrane.AddMembraneMover: Adding a membrane residue representing the position of the membrane after residue 496
protocols.membrane.AddMembraneMover:    Edge   	   Jump     Jump #
          	0497--0001  002
0001--0248
          	0001--0249  001
0249--0496

core.conformation.membrane.SpanningTopology: Filling membrane spanning topology from spanfile 3D31_CD/3D31_CD.span
core.conformation.membrane.SpanningTopology: nres: 497
core.conformation.membrane.SpanningTopology: nres_topo: 496
core.conformation.membrane.SpanningTopology: total residues in spanfile: 496
core.conformation.membrane.SpanningTopology: Pose is in pose numbering scheme.
core.conformation.membrane.SpanningTopology: Total # of TM spans: 12
core.conformation.membrane.SpanningTopology: Number of residues in spanfile: 496
core.conformation.membrane.SpanningTopology: Span 1: start: 4, end: 30 orientation: 1
core.conformation.membrane.SpanningTopology: Span 2: start: 48, end: 71 orientation: 1
core.conformation.membrane.SpanningTopology: Span 3: start: 82, end: 93 orientation: 1
core.conformation.membrane.SpanningTopology: Span 4: start: 128, end: 148 orientation: 1
core.conformation.membrane.SpanningTopology: Span 5: start: 184, end: 197 orientation: 1
core.conformation.membrane.SpanningTopology: Span 6: start: 232, end: 247 orientation: 1
core.conformation.membrane.SpanningTopology: Span 7: start: 252, end: 278 orientation: 1
core.conformation.membrane.SpanningTopology: Span 8: start: 296, end: 319 orientation: 1
core.conformation.membrane.SpanningTopology: Span 9: start: 330, end: 341 orientation: 1
core.conformation.membrane.SpanningTopology: Span 10: start: 376, end: 396 orientation: 1
core.conformation.membrane.SpanningTopology: Span 11: start: 432, end: 445 orientation: 1
core.conformation.membrane.SpanningTopology: Span 12: start: 480, end: 493 orientation: 1
protocols.membrane.AddMembraneMover: MembraneInfo:
protocols.membrane.AddMembraneMover: MembraneInfo: Information about this Membrane Protein
protocols.membrane.AddMembraneMover: Membrane Residue Num: 497
protocols.membrane.AddMembraneMover: Membrane Fold Tree Jump: 2
protocols.membrane.AddMembraneMover: Membrane Thickness: 15
protocols.membrane.AddMembraneMover: Membrane core: 15
protocols.membrane.AddMembraneMover: Membrane Steepness: 10
protocols.membrane.AddMembraneMover: Membrane Spanning Topology 
core.conformation.membrane.SpanningTopology: Total # of TM spans: 12
core.conformation.membrane.SpanningTopology: Number of residues in spanfile: 496
core.conformation.membrane.SpanningTopology: Span 1: start: 4, end: 30 orientation: 1
core.conformation.membrane.SpanningTopology: Span 2: start: 48, end: 71 orientation: 1
core.conformation.membrane.SpanningTopology: Span 3: start: 82, end: 93 orientation: 1
core.conformation.membrane.SpanningTopology: Span 4: start: 128, end: 148 orientation: 1
core.conformation.membrane.SpanningTopology: Span 5: start: 184, end: 197 orientation: 1
core.conformation.membrane.SpanningTopology: Span 6: start: 232, end: 247 orientation: 1
core.conformation.membrane.SpanningTopology: Span 7: start: 252, end: 278 orientation: 1
core.conformation.membrane.SpanningTopology: Span 8: start: 296, end: 319 orientation: 1
core.conformation.membrane.SpanningTopology: Span 9: start: 330, end: 341 orientation: 1
core.conformation.membrane.SpanningTopology: Span 10: start: 376, end: 396 orientation: 1
core.conformation.membrane.SpanningTopology: Span 11: start: 432, end: 445 orientation: 1
core.conformation.membrane.SpanningTopology: Span 12: start: 480, end: 493 orientation: 1
protocols.membrane.SetMembranePositionMover: Calling SetMembranePositionMover
protocols.membrane.SetMembranePositionMover: Starting foldtree: Is membrane fixed? 1
protocols.membrane.SetMembranePositionMover:    Edge   	   Jump     Jump #
          	0497--0001  002
0001--0248
          	0001--0249  001
0249--0496

protocols.membrane.SetMembranePositionMover: Final foldtree: Is membrane fixed? 1
protocols.membrane.SetMembranePositionMover:    Edge   	   Jump     Jump #
          	0497--0001  002
0001--0248
          	0001--0249  001
0249--0496

protocols.membrane.AddMembraneMover: Final foldtree: Is membrane fixed? 1
protocols.membrane.AddMembraneMover:    Edge   	   Jump     Jump #
          	0497--0001  002
0001--0248
          	0001--0249  001
0249--0496

protocols.membrane.util: chainid 1 chain C
protocols.membrane.util: com (3.63263, -5.9961, -0.491211)
protocols.membrane.util: chainid 2 chain D
protocols.membrane.util: com (-4.02727, 6.33257, -0.311593)
protocols.membrane.util: partners C_D
protocols.membrane.util: mem rsd 497
protocols.membrane.util: anchors[1] 195
protocols.membrane.util:    Edge   	   Jump     Jump #
          	0497--0195  001
0195--0248
          	0195--0443  002
0443--0496
0443--0249
0195--0001

core.conformation.membrane.MembraneInfo: Setting a new membrane jump number in MembraneInfo to 1.
core.conformation.membrane.MembraneInfo: Use with caution!
core.scoring.etable: Starting energy table calculation
core.scoring.etable: smooth_etable: changing atr/rep split to bottom of energy well
core.scoring.etable: smooth_etable: spline smoothing lj etables (maxdis = 6)
core.scoring.etable: smooth_etable: spline smoothing solvation etables (max_dis = 6)
core.scoring.etable: Finished calculating energy tables.
core.scoring.etable: Using alternate parameters: LK_DGFREE in MembEtable construction.
core.scoring.etable: Using alternate parameters: MEMB_LK_DGFREE in MembEtable construction.
core.scoring.etable: Using alternate parameters: LK_DGREFCE in MembEtable construction.
core.scoring.etable: Using alternate parameters: MEMB_LK_DGREFCE in MembEtable construction.
core.scoring.etable: Starting membrane specific energy table calculation
core.scoring.etable: smooth_etable: spline smoothing solvation etables (max_dis = 6)
core.scoring.etable: Finished calculating membrane specific energy tables.
basic.io.database: Database file opened: scoring/score_functions/MembranePotential/CEN10_Menv_smooth_log.txt
core.scoring.ramachandran: shapovalov_lib::shap_rama_smooth_level of 4( aka highest_smooth ) got activated.
basic.io.database: Database file opened: scoring/score_functions/rama/shapovalov/kappa25/all.ramaProb
protocols.membrane.geometry.Embedding: Constructing Embedding object from topology and pose
protocols.membrane.geometry.Embedding: Computing membrane embedding from TMspans: 
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 4 to 30
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 4 to 30
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 48 to 71
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 82 to 93
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] If your starting PDB is already translated into the 
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] membrane, then your TMspan does not span the membrane!
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 128 to 148
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 184 to 197
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 232 to 247
protocols.membrane.geometry.Embedding: Span Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (24.251, 6.6675, 0.1295), normal: (0.162989, -0.609247, 0.776049)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-2.5345, -11.9815, 0.87), normal: (0.477122, -0.139837, 0.867641)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-11.7215, 0.09, -7.0915), normal: (0.682858, 0.119161, 0.720768)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-6.781, -12.4095, -0.697), normal: (0.0266688, -0.281538, 0.959179)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (1.5015, -11.2115, -4.2885), normal: (0.102887, 0.114469, 0.988085)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (11.5675, -11.568, 3.755), normal: (0.114838, 0.270595, 0.955819)
protocols.membrane.geometry.Embedding: Total Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (2.71383, -6.7355, -1.22042), normal: (0.283895, -0.0953458, 0.954103)
protocols.membrane.geometry.Embedding: Constructing Embedding object from topology and pose
protocols.membrane.geometry.Embedding: Computing membrane embedding from TMspans: 
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 252 to 278
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 252 to 278
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 296 to 319
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 330 to 341
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] If your starting PDB is already translated into the 
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] membrane, then your TMspan does not span the membrane!
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 376 to 396
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 432 to 445
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 480 to 493
protocols.membrane.geometry.Embedding: Span Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-24.787, -6.1335, 0.2155), normal: (-0.162189, 0.60963, 0.775916)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (2.0265, 12.4695, 0.9575), normal: (-0.476814, 0.140272, 0.867739)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (11.1935, 0.3845, -7.0085), normal: (-0.683014, -0.117945, 0.72082)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (6.2715, 12.8935, -0.6135), normal: (-0.0258776, 0.282035, 0.959055)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-2.0105, 11.7155, -4.202), normal: (-0.102445, -0.114521, 0.988124)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-13.665, 10.667, 5.2145), normal: (0.0256162, -0.173824, 0.984444)
protocols.membrane.geometry.Embedding: Total Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-3.49517, 6.99942, -0.906083), normal: (-0.258104, 0.113343, 0.959446)
protocols.moves.RigidBodyMover: Translate: Jump (before): RT -0.753971 0.462704 -0.466297 0.462547 -0.130093 -0.876998 -0.466452 -0.876916 -0.115936 12.4153 0.284258 6.69696  
protocols.moves.RigidBodyMover: Translate: Jump (after):  RT -0.753971 0.462704 -0.466297 0.462547 -0.130093 -0.876998 -0.466452 -0.876916 -0.115936 -918.529 168.829 -317.239  
core.pack.task: Packer task: initialize from command line() 
basic.io.database: Database file opened: scoring/score_functions/elec_cp_reps.dat
core.scoring.elec.util: Read 40 countpair representative atoms
core.pack.dunbrack.RotamerLibrary: shapovalov_lib_fixes_enable option is true.
core.pack.dunbrack.RotamerLibrary: shapovalov_lib::shap_dun10_smooth_level of 1( aka lowest_smooth ) got activated.
core.pack.dunbrack.RotamerLibrary: Binary rotamer library selected: /home/ralford/apps/Rosetta-stable/main/database/rotamer/shapovalov/StpDwn_0-0-0/Dunbrack10.lib.bin
core.pack.dunbrack.RotamerLibrary: Using Dunbrack library binary file '/home/ralford/apps/Rosetta-stable/main/database/rotamer/shapovalov/StpDwn_0-0-0/Dunbrack10.lib.bin'.
core.pack.dunbrack.RotamerLibrary: Dunbrack 2010 library took 1.59 seconds to load from binary
core.pack.pack_rotamers: built 5155 rotamers at 497 positions.
core.pack.interaction_graph.interaction_graph_factory: Instantiating DensePDInteractionGraph
core.pack.interaction_graph.interaction_graph_factory: IG: 4030520 bytes
core.pack.annealer.FixbbSimAnnealer: pack_rotamers run final: PLTFVFSFLLLVLFLFIFLTLSNMIFEQITEDFSGLVKAAGNRSVISSIFLSLYAGFLATLLALLLGAPTGYILARFDFPGKRLVESIIDVPVVVPHTVAGIALLTVFGSRGLIGEPLESYIQFRDALPGIVVAMLFVSMPYLANSAREGFKSVDPRLENAARSLGAPLWKAFFFVTLPLSARYLLIGSVMTWARAISEFGAVVILAYYPMVGPTLIYDRFISYGLSASRPIAVLLILVTLSIFLVIRPLTFVFSFLLLVLFLFIFLTLSNMIFEQITEDFSGLVKAAGNRSVISSIFLSLYAGFLATLLALLLGAPTGYILARFDFPGKRLVESIIDVPVVVPHTVAGIALLTVFGSRGLIGEPLESYIQFRDALPGIVVAMLFVSMPYLANSAREGFKSVDPRLENAARSLGAPLWKAFFFVTLPLSARYLLIGSVMTWARAISEFGAVVILAYYPMVGPTLIYDRFISYGLSASRPIAVLLILVTLSIFLVIRZ, best_energy: 392.823
protocols.membrane.geometry.Embedding: Constructing Embedding object from topology and pose
protocols.membrane.geometry.Embedding: Computing membrane embedding from TMspans: 
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 4 to 30
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 4 to 30
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 48 to 71
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 82 to 93
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] If your starting PDB is already translated into the 
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] membrane, then your TMspan does not span the membrane!
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 128 to 148
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 184 to 197
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 232 to 247
protocols.membrane.geometry.Embedding: Span Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (24.251, 6.6675, 0.1295), normal: (0.162989, -0.609247, 0.776049)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-2.5345, -11.9815, 0.87), normal: (0.477122, -0.139837, 0.867641)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-11.7215, 0.09, -7.0915), normal: (0.682858, 0.119161, 0.720768)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-6.781, -12.4095, -0.697), normal: (0.0266688, -0.281538, 0.959179)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (1.5015, -11.2115, -4.2885), normal: (0.102887, 0.114469, 0.988085)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (11.5675, -11.568, 3.755), normal: (0.114838, 0.270595, 0.955819)
protocols.membrane.geometry.Embedding: Total Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (2.71383, -6.7355, -1.22042), normal: (0.283895, -0.0953458, 0.954103)
protocols.membrane.geometry.Embedding: Constructing Embedding object from topology and pose
protocols.membrane.geometry.Embedding: Computing membrane embedding from TMspans: 
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 252 to 278
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 252 to 278
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 296 to 319
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 330 to 341
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] If your starting PDB is already translated into the 
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] membrane, then your TMspan does not span the membrane!
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 376 to 396
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 432 to 445
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 480 to 493
protocols.membrane.geometry.Embedding: Span Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (387.138, -917.351, 0.2155), normal: (-0.162189, 0.60963, 0.775916)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (413.951, -898.748, 0.9575), normal: (-0.476814, 0.140272, 0.867739)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (423.118, -910.833, -7.0085), normal: (-0.683014, -0.117945, 0.72082)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (418.196, -898.324, -0.6135), normal: (-0.0258776, 0.282035, 0.959055)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (409.914, -899.502, -4.202), normal: (-0.102445, -0.114521, 0.988124)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (398.26, -900.551, 5.2145), normal: (0.0256162, -0.173824, 0.984444)
protocols.membrane.geometry.Embedding: Total Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (408.43, -904.218, -0.906083), normal: (-0.258104, 0.113343, 0.959446)
protocols.moves.RigidBodyMover: Translate: Jump (before): RT -0.753971 0.462704 -0.466297 0.462547 -0.130093 -0.876998 -0.466452 -0.876916 -0.115936 -918.529 168.829 -317.239  
protocols.moves.RigidBodyMover: Translate: Jump (after):  RT -0.753971 0.462704 -0.466297 0.462547 -0.130093 -0.876998 -0.466452 -0.876916 -0.115936 12.4153 0.284258 6.69696  
core.util.switchresiduetypeset: [ WARNING ] When switching to a fa_standard ResidueTypeSet:  Pose already contains fa_standard ResidueTypes.
protocols.jd2.JobDistributor: 3D31_CD_0001 reported success in 1261 seconds
protocols.jd2.JobDistributor: no more batches to process... 
protocols.jd2.JobDistributor: 10 jobs considered, 1 jobs attempted in 1263 seconds
core.init: Checking for fconfig files in pwd and ./rosetta/flags 
core.init: Rosetta version: 2018.10.post.dev+219.rfalford12.minimalmastermodifications.45420d5 45420d50022f91d2fe940278678c19770a2df5c9 git@github.com:RosettaCommons/main.git 2018-04-19T12:11:21
core.init: command: condor_exec.exe -in:file:s 3D31_CD/3D31_CD.pdb -nstruct 10 -score:weights ref2015.wts -mp:setup:spanfiles 3D31_CD/3D31_CD.span -packing:pack_missing_sidechains 0 -docking:partners C_D -out:path:all 3D31_CD
core.init: 'RNG device' seed mode, using '/dev/urandom', seed=-186653089 seed_offset=0 real_seed=-186653089
core.init.random: RandomGenerator:init: Normal mode, seed=-186653089 RG_type=mt19937
core.init: Resolved executable path: /home/ralford/apps/Rosetta-stable/main/source/build/src/debug/linux/3.10/64/x86/gcc/4.8/default/docking_prepack_protocol.default.linuxgccdebug
core.init: Looking for database based on location of executable: /home/ralford/apps/Rosetta-stable/main/database/
core.scoring.etable: Starting energy table calculation
core.scoring.etable: smooth_etable: changing atr/rep split to bottom of energy well
core.scoring.etable: smooth_etable: spline smoothing lj etables (maxdis = 6)
core.scoring.etable: smooth_etable: spline smoothing solvation etables (max_dis = 6)
core.scoring.etable: Finished calculating energy tables.
basic.io.database: Database file opened: scoring/score_functions/PairEPotential/pdb_pair_stats_fine
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBPoly1D.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBFadeIntervals.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBEval.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/DonStrength.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/AccStrength.csv
core.scoring.ScoreFunctionFactory: SCOREFUNCTION: ref2015.wts
core.chemical.GlobalResidueTypeSet: Finished initializing fa_standard residue type set.  Created 603 residue types
core.chemical.GlobalResidueTypeSet: Total time to initialize 14.37 seconds.
basic.io.database: Database file opened: scoring/score_functions/rama/fd/all.ramaProb
basic.io.database: Database file opened: scoring/score_functions/rama/fd/prepro.ramaProb
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.all.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.gly.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.pro.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.valile.txt
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/P_AA
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/P_AA_n
core.scoring.P_AA: shapovalov_lib::shap_p_aa_pp_smooth_level of 1( aka low_smooth ) got activated.
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/shapovalov/10deg/kappa131/a20.prop
protocols.jd2.PDBJobInputter: Instantiate PDBJobInputter
protocols.jd2.PDBJobInputter: PDBJobInputter::fill_jobs
protocols.jd2.PDBJobInputter: pushed 3D31_CD/3D31_CD.pdb nstruct indices 1 - 10
protocols.evaluation.ChiWellRmsdEvaluatorCreator: Evaluation Creator active ... 
protocols.jd2.PDBJobInputter: PDBJobInputter::pose_from_job
protocols.jd2.PDBJobInputter: filling pose from PDB 3D31_CD/3D31_CD.pdb
core.import_pose.import_pose: File '3D31_CD/3D31_CD.pdb' automatically determined to be of type PDB
core.conformation.Conformation: [ WARNING ] missing heavyatom:  OXT on residue ARG:CtermProteinFull 248
core.conformation.Conformation: [ WARNING ] missing heavyatom:  OXT on residue ARG:CtermProteinFull 496
protocols.membrane.AddMembraneMover: =====================================================================
protocols.membrane.AddMembraneMover: ||           WELCOME TO THE WORLD OF MEMBRANE PROTEINS...          ||
protocols.membrane.AddMembraneMover: =====================================================================
protocols.membrane.AddMembraneMover: No membrane residue was found
protocols.membrane.AddMembraneMover: Adding a new membrane residue to the pose
protocols.membrane.AddMembraneMover: Adding a membrane residue representing the position of the membrane after residue 496
protocols.membrane.AddMembraneMover:    Edge   	   Jump     Jump #
          	0497--0001  002
0001--0248
          	0001--0249  001
0249--0496

core.conformation.membrane.SpanningTopology: Filling membrane spanning topology from spanfile 3D31_CD/3D31_CD.span
core.conformation.membrane.SpanningTopology: nres: 497
core.conformation.membrane.SpanningTopology: nres_topo: 496
core.conformation.membrane.SpanningTopology: total residues in spanfile: 496
core.conformation.membrane.SpanningTopology: Pose is in pose numbering scheme.
core.conformation.membrane.SpanningTopology: Total # of TM spans: 12
core.conformation.membrane.SpanningTopology: Number of residues in spanfile: 496
core.conformation.membrane.SpanningTopology: Span 1: start: 4, end: 30 orientation: 1
core.conformation.membrane.SpanningTopology: Span 2: start: 48, end: 71 orientation: 1
core.conformation.membrane.SpanningTopology: Span 3: start: 82, end: 93 orientation: 1
core.conformation.membrane.SpanningTopology: Span 4: start: 128, end: 148 orientation: 1
core.conformation.membrane.SpanningTopology: Span 5: start: 184, end: 197 orientation: 1
core.conformation.membrane.SpanningTopology: Span 6: start: 232, end: 247 orientation: 1
core.conformation.membrane.SpanningTopology: Span 7: start: 252, end: 278 orientation: 1
core.conformation.membrane.SpanningTopology: Span 8: start: 296, end: 319 orientation: 1
core.conformation.membrane.SpanningTopology: Span 9: start: 330, end: 341 orientation: 1
core.conformation.membrane.SpanningTopology: Span 10: start: 376, end: 396 orientation: 1
core.conformation.membrane.SpanningTopology: Span 11: start: 432, end: 445 orientation: 1
core.conformation.membrane.SpanningTopology: Span 12: start: 480, end: 493 orientation: 1
protocols.membrane.AddMembraneMover: MembraneInfo:
protocols.membrane.AddMembraneMover: MembraneInfo: Information about this Membrane Protein
protocols.membrane.AddMembraneMover: Membrane Residue Num: 497
protocols.membrane.AddMembraneMover: Membrane Fold Tree Jump: 2
protocols.membrane.AddMembraneMover: Membrane Thickness: 15
protocols.membrane.AddMembraneMover: Membrane core: 15
protocols.membrane.AddMembraneMover: Membrane Steepness: 10
protocols.membrane.AddMembraneMover: Membrane Spanning Topology 
core.conformation.membrane.SpanningTopology: Total # of TM spans: 12
core.conformation.membrane.SpanningTopology: Number of residues in spanfile: 496
core.conformation.membrane.SpanningTopology: Span 1: start: 4, end: 30 orientation: 1
core.conformation.membrane.SpanningTopology: Span 2: start: 48, end: 71 orientation: 1
core.conformation.membrane.SpanningTopology: Span 3: start: 82, end: 93 orientation: 1
core.conformation.membrane.SpanningTopology: Span 4: start: 128, end: 148 orientation: 1
core.conformation.membrane.SpanningTopology: Span 5: start: 184, end: 197 orientation: 1
core.conformation.membrane.SpanningTopology: Span 6: start: 232, end: 247 orientation: 1
core.conformation.membrane.SpanningTopology: Span 7: start: 252, end: 278 orientation: 1
core.conformation.membrane.SpanningTopology: Span 8: start: 296, end: 319 orientation: 1
core.conformation.membrane.SpanningTopology: Span 9: start: 330, end: 341 orientation: 1
core.conformation.membrane.SpanningTopology: Span 10: start: 376, end: 396 orientation: 1
core.conformation.membrane.SpanningTopology: Span 11: start: 432, end: 445 orientation: 1
core.conformation.membrane.SpanningTopology: Span 12: start: 480, end: 493 orientation: 1
protocols.membrane.SetMembranePositionMover: Calling SetMembranePositionMover
protocols.membrane.SetMembranePositionMover: Starting foldtree: Is membrane fixed? 1
protocols.membrane.SetMembranePositionMover:    Edge   	   Jump     Jump #
          	0497--0001  002
0001--0248
          	0001--0249  001
0249--0496

protocols.membrane.SetMembranePositionMover: Final foldtree: Is membrane fixed? 1
protocols.membrane.SetMembranePositionMover:    Edge   	   Jump     Jump #
          	0497--0001  002
0001--0248
          	0001--0249  001
0249--0496

protocols.membrane.AddMembraneMover: Final foldtree: Is membrane fixed? 1
protocols.membrane.AddMembraneMover:    Edge   	   Jump     Jump #
          	0497--0001  002
0001--0248
          	0001--0249  001
0249--0496

protocols.membrane.util: chainid 1 chain C
protocols.membrane.util: com (3.63263, -5.9961, -0.491211)
protocols.membrane.util: chainid 2 chain D
protocols.membrane.util: com (-4.02727, 6.33257, -0.311593)
protocols.membrane.util: partners C_D
protocols.membrane.util: mem rsd 497
protocols.membrane.util: anchors[1] 195
protocols.membrane.util:    Edge   	   Jump     Jump #
          	0497--0195  001
0195--0248
          	0195--0443  002
0443--0496
0443--0249
0195--0001

core.conformation.membrane.MembraneInfo: Setting a new membrane jump number in MembraneInfo to 1.
core.conformation.membrane.MembraneInfo: Use with caution!
core.scoring.etable: Starting energy table calculation
core.scoring.etable: smooth_etable: changing atr/rep split to bottom of energy well
core.scoring.etable: smooth_etable: spline smoothing lj etables (maxdis = 6)
core.scoring.etable: smooth_etable: spline smoothing solvation etables (max_dis = 6)
core.scoring.etable: Finished calculating energy tables.
core.scoring.etable: Using alternate parameters: LK_DGFREE in MembEtable construction.
core.scoring.etable: Using alternate parameters: MEMB_LK_DGFREE in MembEtable construction.
core.scoring.etable: Using alternate parameters: LK_DGREFCE in MembEtable construction.
core.scoring.etable: Using alternate parameters: MEMB_LK_DGREFCE in MembEtable construction.
core.scoring.etable: Starting membrane specific energy table calculation
core.scoring.etable: smooth_etable: spline smoothing solvation etables (max_dis = 6)
core.scoring.etable: Finished calculating membrane specific energy tables.
basic.io.database: Database file opened: scoring/score_functions/MembranePotential/CEN10_Menv_smooth_log.txt
core.scoring.ramachandran: shapovalov_lib::shap_rama_smooth_level of 4( aka highest_smooth ) got activated.
basic.io.database: Database file opened: scoring/score_functions/rama/shapovalov/kappa25/all.ramaProb
protocols.membrane.geometry.Embedding: Constructing Embedding object from topology and pose
protocols.membrane.geometry.Embedding: Computing membrane embedding from TMspans: 
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 4 to 30
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 4 to 30
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 48 to 71
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 82 to 93
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] If your starting PDB is already translated into the 
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] membrane, then your TMspan does not span the membrane!
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 128 to 148
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 184 to 197
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 232 to 247
protocols.membrane.geometry.Embedding: Span Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (24.251, 6.6675, 0.1295), normal: (0.162989, -0.609247, 0.776049)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-2.5345, -11.9815, 0.87), normal: (0.477122, -0.139837, 0.867641)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-11.7215, 0.09, -7.0915), normal: (0.682858, 0.119161, 0.720768)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-6.781, -12.4095, -0.697), normal: (0.0266688, -0.281538, 0.959179)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (1.5015, -11.2115, -4.2885), normal: (0.102887, 0.114469, 0.988085)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (11.5675, -11.568, 3.755), normal: (0.114838, 0.270595, 0.955819)
protocols.membrane.geometry.Embedding: Total Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (2.71383, -6.7355, -1.22042), normal: (0.283895, -0.0953458, 0.954103)
protocols.membrane.geometry.Embedding: Constructing Embedding object from topology and pose
protocols.membrane.geometry.Embedding: Computing membrane embedding from TMspans: 
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 252 to 278
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 252 to 278
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 296 to 319
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 330 to 341
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] If your starting PDB is already translated into the 
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] membrane, then your TMspan does not span the membrane!
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 376 to 396
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 432 to 445
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 480 to 493
protocols.membrane.geometry.Embedding: Span Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-24.787, -6.1335, 0.2155), normal: (-0.162189, 0.60963, 0.775916)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (2.0265, 12.4695, 0.9575), normal: (-0.476814, 0.140272, 0.867739)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (11.1935, 0.3845, -7.0085), normal: (-0.683014, -0.117945, 0.72082)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (6.2715, 12.8935, -0.6135), normal: (-0.0258776, 0.282035, 0.959055)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-2.0105, 11.7155, -4.202), normal: (-0.102445, -0.114521, 0.988124)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-13.665, 10.667, 5.2145), normal: (0.0256162, -0.173824, 0.984444)
protocols.membrane.geometry.Embedding: Total Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-3.49517, 6.99942, -0.906083), normal: (-0.258104, 0.113343, 0.959446)
protocols.moves.RigidBodyMover: Translate: Jump (before): RT -0.753971 0.462704 -0.466297 0.462547 -0.130093 -0.876998 -0.466452 -0.876916 -0.115936 12.4153 0.284258 6.69696  
protocols.moves.RigidBodyMover: Translate: Jump (after):  RT -0.753971 0.462704 -0.466297 0.462547 -0.130093 -0.876998 -0.466452 -0.876916 -0.115936 -918.529 168.829 -317.239  
core.pack.task: Packer task: initialize from command line() 
basic.io.database: Database file opened: scoring/score_functions/elec_cp_reps.dat
core.scoring.elec.util: Read 40 countpair representative atoms
core.pack.dunbrack.RotamerLibrary: shapovalov_lib_fixes_enable option is true.
core.pack.dunbrack.RotamerLibrary: shapovalov_lib::shap_dun10_smooth_level of 1( aka lowest_smooth ) got activated.
core.pack.dunbrack.RotamerLibrary: Binary rotamer library selected: /home/ralford/apps/Rosetta-stable/main/database/rotamer/shapovalov/StpDwn_0-0-0/Dunbrack10.lib.bin
core.pack.dunbrack.RotamerLibrary: Using Dunbrack library binary file '/home/ralford/apps/Rosetta-stable/main/database/rotamer/shapovalov/StpDwn_0-0-0/Dunbrack10.lib.bin'.
core.pack.dunbrack.RotamerLibrary: Dunbrack 2010 library took 1.55 seconds to load from binary
core.pack.pack_rotamers: built 5155 rotamers at 497 positions.
core.pack.interaction_graph.interaction_graph_factory: Instantiating DensePDInteractionGraph
core.pack.interaction_graph.interaction_graph_factory: IG: 4030520 bytes
core.pack.annealer.FixbbSimAnnealer: pack_rotamers run final: PLTFVFSFLLLVLFLFIFLTLSNMIFEQITEDFSGLVKAAGNRSVISSIFLSLYAGFLATLLALLLGAPTGYILARFDFPGKRLVESIIDVPVVVPHTVAGIALLTVFGSRGLIGEPLESYIQFRDALPGIVVAMLFVSMPYLANSAREGFKSVDPRLENAARSLGAPLWKAFFFVTLPLSARYLLIGSVMTWARAISEFGAVVILAYYPMVGPTLIYDRFISYGLSASRPIAVLLILVTLSIFLVIRPLTFVFSFLLLVLFLFIFLTLSNMIFEQITEDFSGLVKAAGNRSVISSIFLSLYAGFLATLLALLLGAPTGYILARFDFPGKRLVESIIDVPVVVPHTVAGIALLTVFGSRGLIGEPLESYIQFRDALPGIVVAMLFVSMPYLANSAREGFKSVDPRLENAARSLGAPLWKAFFFVTLPLSARYLLIGSVMTWARAISEFGAVVILAYYPMVGPTLIYDRFISYGLSASRPIAVLLILVTLSIFLVIRZ, best_energy: 405.906
protocols.membrane.geometry.Embedding: Constructing Embedding object from topology and pose
protocols.membrane.geometry.Embedding: Computing membrane embedding from TMspans: 
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 4 to 30
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 4 to 30
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 48 to 71
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 82 to 93
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] If your starting PDB is already translated into the 
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] membrane, then your TMspan does not span the membrane!
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 128 to 148
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 184 to 197
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 232 to 247
protocols.membrane.geometry.Embedding: Span Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (24.251, 6.6675, 0.1295), normal: (0.162989, -0.609247, 0.776049)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-2.5345, -11.9815, 0.87), normal: (0.477122, -0.139837, 0.867641)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-11.7215, 0.09, -7.0915), normal: (0.682858, 0.119161, 0.720768)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-6.781, -12.4095, -0.697), normal: (0.0266688, -0.281538, 0.959179)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (1.5015, -11.2115, -4.2885), normal: (0.102887, 0.114469, 0.988085)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (11.5675, -11.568, 3.755), normal: (0.114838, 0.270595, 0.955819)
protocols.membrane.geometry.Embedding: Total Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (2.71383, -6.7355, -1.22042), normal: (0.283895, -0.0953458, 0.954103)
protocols.membrane.geometry.Embedding: Constructing Embedding object from topology and pose
protocols.membrane.geometry.Embedding: Computing membrane embedding from TMspans: 
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 252 to 278
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 252 to 278
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 296 to 319
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 330 to 341
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] If your starting PDB is already translated into the 
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] membrane, then your TMspan does not span the membrane!
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 376 to 396
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 432 to 445
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 480 to 493
protocols.membrane.geometry.Embedding: Span Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (387.138, -917.351, 0.2155), normal: (-0.162189, 0.60963, 0.775916)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (413.951, -898.748, 0.9575), normal: (-0.476814, 0.140272, 0.867739)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (423.118, -910.833, -7.0085), normal: (-0.683014, -0.117945, 0.72082)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (418.196, -898.324, -0.6135), normal: (-0.0258776, 0.282035, 0.959055)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (409.914, -899.502, -4.202), normal: (-0.102445, -0.114521, 0.988124)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (398.26, -900.551, 5.2145), normal: (0.0256162, -0.173824, 0.984444)
protocols.membrane.geometry.Embedding: Total Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (408.43, -904.218, -0.906083), normal: (-0.258104, 0.113343, 0.959446)
protocols.moves.RigidBodyMover: Translate: Jump (before): RT -0.753971 0.462704 -0.466297 0.462547 -0.130093 -0.876998 -0.466452 -0.876916 -0.115936 -918.529 168.829 -317.239  
protocols.moves.RigidBodyMover: Translate: Jump (after):  RT -0.753971 0.462704 -0.466297 0.462547 -0.130093 -0.876998 -0.466452 -0.876916 -0.115936 12.4153 0.284258 6.69696  
core.util.switchresiduetypeset: [ WARNING ] When switching to a fa_standard ResidueTypeSet:  Pose already contains fa_standard ResidueTypes.
protocols.jd2.JobDistributor: 3D31_CD_0001 reported success in 1451 seconds
protocols.jd2.JobDistributor: no more batches to process... 
protocols.jd2.JobDistributor: 10 jobs considered, 1 jobs attempted in 1452 seconds
