core.init: Checking for fconfig files in pwd and ./rosetta/flags 
core.init: Rosetta version: 2018.10.post.dev+219.rfalford12.minimalmastermodifications.45420d5 45420d50022f91d2fe940278678c19770a2df5c9 git@github.com:RosettaCommons/main.git 2018-04-19T12:11:21
core.init: command: condor_exec.exe -in:file:s 3RVY_AB/3RVY_AB.pdb -nstruct 10 -score:weights ref2015.wts -mp:setup:spanfiles 3RVY_AB/3RVY_AB.span -packing:pack_missing_sidechains 0 -docking:partners A_B -out:path:all 3RVY_AB
core.init: 'RNG device' seed mode, using '/dev/urandom', seed=-1969225913 seed_offset=0 real_seed=-1969225913
core.init.random: RandomGenerator:init: Normal mode, seed=-1969225913 RG_type=mt19937
core.init: Resolved executable path: /home/ralford/apps/Rosetta-stable/main/source/build/src/debug/linux/3.10/64/x86/gcc/4.8/default/docking_prepack_protocol.default.linuxgccdebug
core.init: Looking for database based on location of executable: /home/ralford/apps/Rosetta-stable/main/database/
core.scoring.etable: Starting energy table calculation
core.scoring.etable: smooth_etable: changing atr/rep split to bottom of energy well
core.scoring.etable: smooth_etable: spline smoothing lj etables (maxdis = 6)
core.scoring.etable: smooth_etable: spline smoothing solvation etables (max_dis = 6)
core.scoring.etable: Finished calculating energy tables.
basic.io.database: Database file opened: scoring/score_functions/PairEPotential/pdb_pair_stats_fine
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBPoly1D.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBFadeIntervals.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBEval.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/DonStrength.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/AccStrength.csv
core.scoring.ScoreFunctionFactory: SCOREFUNCTION: ref2015.wts
core.chemical.GlobalResidueTypeSet: Finished initializing fa_standard residue type set.  Created 603 residue types
core.chemical.GlobalResidueTypeSet: Total time to initialize 14.37 seconds.
basic.io.database: Database file opened: scoring/score_functions/rama/fd/all.ramaProb
basic.io.database: Database file opened: scoring/score_functions/rama/fd/prepro.ramaProb
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.all.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.gly.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.pro.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.valile.txt
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/P_AA
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/P_AA_n
core.scoring.P_AA: shapovalov_lib::shap_p_aa_pp_smooth_level of 1( aka low_smooth ) got activated.
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/shapovalov/10deg/kappa131/a20.prop
protocols.jd2.PDBJobInputter: Instantiate PDBJobInputter
protocols.jd2.PDBJobInputter: PDBJobInputter::fill_jobs
protocols.jd2.PDBJobInputter: pushed 3RVY_AB/3RVY_AB.pdb nstruct indices 1 - 10
protocols.evaluation.ChiWellRmsdEvaluatorCreator: Evaluation Creator active ... 
protocols.jd2.PDBJobInputter: PDBJobInputter::pose_from_job
protocols.jd2.PDBJobInputter: filling pose from PDB 3RVY_AB/3RVY_AB.pdb
core.import_pose.import_pose: File '3RVY_AB/3RVY_AB.pdb' automatically determined to be of type PDB
core.conformation.Conformation: [ WARNING ] missing heavyatom:  OXT on residue MET:CtermProteinFull 221
core.conformation.Conformation: [ WARNING ] missing heavyatom:  OXT on residue MET:CtermProteinFull 442
protocols.membrane.AddMembraneMover: =====================================================================
protocols.membrane.AddMembraneMover: ||           WELCOME TO THE WORLD OF MEMBRANE PROTEINS...          ||
protocols.membrane.AddMembraneMover: =====================================================================
protocols.membrane.AddMembraneMover: No membrane residue was found
protocols.membrane.AddMembraneMover: Adding a new membrane residue to the pose
protocols.membrane.AddMembraneMover: Adding a membrane residue representing the position of the membrane after residue 442
protocols.membrane.AddMembraneMover:    Edge   	   Jump     Jump #
          	0443--0001  002
0001--0221
          	0001--0222  001
0222--0442

core.conformation.membrane.SpanningTopology: Filling membrane spanning topology from spanfile 3RVY_AB/3RVY_AB.span
core.conformation.membrane.SpanningTopology: nres: 443
core.conformation.membrane.SpanningTopology: nres_topo: 442
core.conformation.membrane.SpanningTopology: total residues in spanfile: 442
core.conformation.membrane.SpanningTopology: Pose is in pose numbering scheme.
core.conformation.membrane.SpanningTopology: Total # of TM spans: 14
core.conformation.membrane.SpanningTopology: Number of residues in spanfile: 442
core.conformation.membrane.SpanningTopology: Span 1: start: 13, end: 31 orientation: 1
core.conformation.membrane.SpanningTopology: Span 2: start: 43, end: 65 orientation: 1
core.conformation.membrane.SpanningTopology: Span 3: start: 75, end: 88 orientation: 1
core.conformation.membrane.SpanningTopology: Span 4: start: 97, end: 111 orientation: 1
core.conformation.membrane.SpanningTopology: Span 5: start: 126, end: 150 orientation: 1
core.conformation.membrane.SpanningTopology: Span 6: start: 163, end: 174 orientation: 1
core.conformation.membrane.SpanningTopology: Span 7: start: 194, end: 216 orientation: 1
core.conformation.membrane.SpanningTopology: Span 8: start: 234, end: 252 orientation: 1
core.conformation.membrane.SpanningTopology: Span 9: start: 264, end: 286 orientation: 1
core.conformation.membrane.SpanningTopology: Span 10: start: 296, end: 309 orientation: 1
core.conformation.membrane.SpanningTopology: Span 11: start: 318, end: 333 orientation: 1
core.conformation.membrane.SpanningTopology: Span 12: start: 347, end: 371 orientation: 1
core.conformation.membrane.SpanningTopology: Span 13: start: 384, end: 395 orientation: 1
core.conformation.membrane.SpanningTopology: Span 14: start: 415, end: 437 orientation: 1
protocols.membrane.AddMembraneMover: MembraneInfo:
protocols.membrane.AddMembraneMover: MembraneInfo: Information about this Membrane Protein
protocols.membrane.AddMembraneMover: Membrane Residue Num: 443
protocols.membrane.AddMembraneMover: Membrane Fold Tree Jump: 2
protocols.membrane.AddMembraneMover: Membrane Thickness: 15
protocols.membrane.AddMembraneMover: Membrane core: 15
protocols.membrane.AddMembraneMover: Membrane Steepness: 10
protocols.membrane.AddMembraneMover: Membrane Spanning Topology 
core.conformation.membrane.SpanningTopology: Total # of TM spans: 14
core.conformation.membrane.SpanningTopology: Number of residues in spanfile: 442
core.conformation.membrane.SpanningTopology: Span 1: start: 13, end: 31 orientation: 1
core.conformation.membrane.SpanningTopology: Span 2: start: 43, end: 65 orientation: 1
core.conformation.membrane.SpanningTopology: Span 3: start: 75, end: 88 orientation: 1
core.conformation.membrane.SpanningTopology: Span 4: start: 97, end: 111 orientation: 1
core.conformation.membrane.SpanningTopology: Span 5: start: 126, end: 150 orientation: 1
core.conformation.membrane.SpanningTopology: Span 6: start: 163, end: 174 orientation: 1
core.conformation.membrane.SpanningTopology: Span 7: start: 194, end: 216 orientation: 1
core.conformation.membrane.SpanningTopology: Span 8: start: 234, end: 252 orientation: 1
core.conformation.membrane.SpanningTopology: Span 9: start: 264, end: 286 orientation: 1
core.conformation.membrane.SpanningTopology: Span 10: start: 296, end: 309 orientation: 1
core.conformation.membrane.SpanningTopology: Span 11: start: 318, end: 333 orientation: 1
core.conformation.membrane.SpanningTopology: Span 12: start: 347, end: 371 orientation: 1
core.conformation.membrane.SpanningTopology: Span 13: start: 384, end: 395 orientation: 1
core.conformation.membrane.SpanningTopology: Span 14: start: 415, end: 437 orientation: 1
protocols.membrane.SetMembranePositionMover: Calling SetMembranePositionMover
protocols.membrane.SetMembranePositionMover: Starting foldtree: Is membrane fixed? 1
protocols.membrane.SetMembranePositionMover:    Edge   	   Jump     Jump #
          	0443--0001  002
0001--0221
          	0001--0222  001
0222--0442

protocols.membrane.SetMembranePositionMover: Final foldtree: Is membrane fixed? 1
protocols.membrane.SetMembranePositionMover:    Edge   	   Jump     Jump #
          	0443--0001  002
0001--0221
          	0001--0222  001
0222--0442

protocols.membrane.AddMembraneMover: Final foldtree: Is membrane fixed? 1
protocols.membrane.AddMembraneMover:    Edge   	   Jump     Jump #
          	0443--0001  002
0001--0221
          	0001--0222  001
0222--0442

protocols.membrane.util: chainid 1 chain A
protocols.membrane.util: com (21.3245, 7.20909, 0.0943056)
protocols.membrane.util: chainid 2 chain B
protocols.membrane.util: com (-7.30665, 21.3049, 0.155219)
protocols.membrane.util: partners A_B
protocols.membrane.util: mem rsd 443
protocols.membrane.util: anchors[1] 104
protocols.membrane.util:    Edge   	   Jump     Jump #
          	0443--0104  001
0104--0221
          	0104--0325  002
0325--0442
0325--0222
0104--0001

core.conformation.membrane.MembraneInfo: Setting a new membrane jump number in MembraneInfo to 1.
core.conformation.membrane.MembraneInfo: Use with caution!
core.scoring.etable: Starting energy table calculation
core.scoring.etable: smooth_etable: changing atr/rep split to bottom of energy well
core.scoring.etable: smooth_etable: spline smoothing lj etables (maxdis = 6)
core.scoring.etable: smooth_etable: spline smoothing solvation etables (max_dis = 6)
core.scoring.etable: Finished calculating energy tables.
core.scoring.etable: Using alternate parameters: LK_DGFREE in MembEtable construction.
core.scoring.etable: Using alternate parameters: MEMB_LK_DGFREE in MembEtable construction.
core.scoring.etable: Using alternate parameters: LK_DGREFCE in MembEtable construction.
core.scoring.etable: Using alternate parameters: MEMB_LK_DGREFCE in MembEtable construction.
core.scoring.etable: Starting membrane specific energy table calculation
core.scoring.etable: smooth_etable: spline smoothing solvation etables (max_dis = 6)
core.scoring.etable: Finished calculating membrane specific energy tables.
basic.io.database: Database file opened: scoring/score_functions/MembranePotential/CEN10_Menv_smooth_log.txt
core.scoring.ramachandran: shapovalov_lib::shap_rama_smooth_level of 4( aka highest_smooth ) got activated.
basic.io.database: Database file opened: scoring/score_functions/rama/shapovalov/kappa25/all.ramaProb
protocols.membrane.geometry.Embedding: Constructing Embedding object from topology and pose
protocols.membrane.geometry.Embedding: Computing membrane embedding from TMspans: 
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 13 to 31
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 13 to 31
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 43 to 65
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 75 to 88
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 97 to 111
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 126 to 150
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 163 to 174
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] If your starting PDB is already translated into the 
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] membrane, then your TMspan does not span the membrane!
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 194 to 216
protocols.membrane.geometry.Embedding: Span Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (23.842, 30.034, 1.604), normal: (0.347345, 0.19503, 0.917232)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (35.925, 26.105, 0.086), normal: (0.366454, -0.352435, 0.861104)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (33.017, 13.98, 3.6605), normal: (-0.3737, -0.425654, 0.824116)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (26.599, 14.126, -0.9635), normal: (-0.202301, 0.296661, 0.933309)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (15.8745, -9.895, -0.378), normal: (-0.032711, 0.616025, 0.787048)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (13.787, -10.32, -8.284), normal: (0.802362, -0.392734, -0.449416)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (6.2055, -10.1465, 0.1595), normal: (0.142286, 0.562969, 0.814138)
protocols.membrane.geometry.Embedding: Total Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (22.1786, 7.69764, -0.587929), normal: (0.217356, 0.1035, 0.97059)
protocols.membrane.geometry.Embedding: Constructing Embedding object from topology and pose
protocols.membrane.geometry.Embedding: Computing membrane embedding from TMspans: 
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 234 to 252
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 234 to 252
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 264 to 286
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 296 to 309
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 318 to 333
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 347 to 371
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 384 to 395
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] If your starting PDB is already translated into the 
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] membrane, then your TMspan does not span the membrane!
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 415 to 437
protocols.membrane.geometry.Embedding: Span Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-30.0215, 23.7555, 1.744), normal: (-0.197354, 0.348226, 0.9164)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-26.184, 35.8585, 0.098), normal: (0.349902, 0.371134, 0.860133)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-14.102, 33.053, 3.742), normal: (0.426889, -0.385623, 0.817961)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-15.9785, 26.708, -0.5355), normal: (-0.412668, -0.169715, 0.894931)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (9.8385, 15.8005, -0.442), normal: (-0.616388, -0.0344352, 0.786689)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (10.277, 13.8085, -8.2505), normal: (0.387227, 0.808103, -0.443875)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (10.2595, 6.315, 0.393), normal: (-0.554687, 0.144018, 0.8195)
protocols.membrane.geometry.Embedding: Total Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-7.98729, 22.1856, -0.464429), normal: (-0.128143, 0.224628, 0.965982)
protocols.moves.RigidBodyMover: Translate: Jump (before): RT 0.762535 0.638599 -0.103597 -0.146098 0.013982 -0.989171 -0.630235 0.769413 0.10396 0.610703 33.3224 24.707  
protocols.moves.RigidBodyMover: Translate: Jump (after):  RT 0.762535 0.638599 -0.103597 -0.146098 0.013982 -0.989171 -0.630235 0.769413 0.10396 90.687 -863.532 -408.349  
core.pack.task: Packer task: initialize from command line() 
basic.io.database: Database file opened: scoring/score_functions/elec_cp_reps.dat
core.scoring.elec.util: Read 40 countpair representative atoms
core.pack.dunbrack.RotamerLibrary: shapovalov_lib_fixes_enable option is true.
core.pack.dunbrack.RotamerLibrary: shapovalov_lib::shap_dun10_smooth_level of 1( aka lowest_smooth ) got activated.
core.pack.dunbrack.RotamerLibrary: Binary rotamer library selected: /home/ralford/apps/Rosetta-stable/main/database/rotamer/shapovalov/StpDwn_0-0-0/Dunbrack10.lib.bin
core.pack.dunbrack.RotamerLibrary: Using Dunbrack library binary file '/home/ralford/apps/Rosetta-stable/main/database/rotamer/shapovalov/StpDwn_0-0-0/Dunbrack10.lib.bin'.
core.pack.dunbrack.RotamerLibrary: Dunbrack 2010 library took 1.59 seconds to load from binary
core.pack.pack_rotamers: built 5077 rotamers at 443 positions.
core.pack.interaction_graph.interaction_graph_factory: Instantiating DensePDInteractionGraph
core.pack.interaction_graph.interaction_graph_factory: IG: 3958500 bytes
core.pack.annealer.FixbbSimAnnealer: pack_rotamers run final: MYLRITNIVESSFFTKFIIYLIVLNGITMGLETSKTFMQSFGVYTTLFNQIVITIFTIEIILRIYVHRISFFKDPWSLFDFFVVAISLVPTSSGFEILRVLRVLRLFRLVTAVPQMRKIVSALISVIPGMLSVIALMTLFFYIFAIMATQLFGERFPEWFGTLGESFYTLFQVMTLESWSMGIVRPLMEVYPYAWVFFIPFIFVVTFVMINLVVAICVDAMMYLRITNIVESSFFTKFIIYLIVLNGITMGLETSKTFMQSFGVYTTLFNQIVITIFTIEIILRIYVHRISFFKDPWSLFDFFVVAISLVPTSSGFEILRVLRVLRLFRLVTAVPQMRKIVSALISVIPGMLSVIALMTLFFYIFAIMATQLFGERFPEWFGTLGESFYTLFQVMTLESWSMGIVRPLMEVYPYAWVFFIPFIFVVTFVMINLVVAICVDAMZ, best_energy: 171.042
protocols.membrane.geometry.Embedding: Constructing Embedding object from topology and pose
protocols.membrane.geometry.Embedding: Computing membrane embedding from TMspans: 
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 13 to 31
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 13 to 31
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 43 to 65
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 75 to 88
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 97 to 111
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 126 to 150
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 163 to 174
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] If your starting PDB is already translated into the 
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] membrane, then your TMspan does not span the membrane!
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 194 to 216
protocols.membrane.geometry.Embedding: Span Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (23.842, 30.034, 1.604), normal: (0.347345, 0.19503, 0.917232)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (35.925, 26.105, 0.086), normal: (0.366454, -0.352435, 0.861104)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (33.017, 13.98, 3.6605), normal: (-0.3737, -0.425654, 0.824116)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (26.599, 14.126, -0.9635), normal: (-0.202301, 0.296661, 0.933309)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (15.8745, -9.895, -0.378), normal: (-0.032711, 0.616025, 0.787048)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (13.787, -10.32, -8.284), normal: (0.802362, -0.392734, -0.449416)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (6.2055, -10.1465, 0.1595), normal: (0.142286, 0.562969, 0.814138)
protocols.membrane.geometry.Embedding: Total Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (22.1786, 7.69764, -0.587929), normal: (0.217356, 0.1035, 0.97059)
protocols.membrane.geometry.Embedding: Constructing Embedding object from topology and pose
protocols.membrane.geometry.Embedding: Computing membrane embedding from TMspans: 
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 234 to 252
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 234 to 252
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 264 to 286
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 296 to 309
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 318 to 333
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 347 to 371
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 384 to 395
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] If your starting PDB is already translated into the 
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] membrane, then your TMspan does not span the membrane!
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 415 to 437
protocols.membrane.geometry.Embedding: Span Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (871.405, -409.178, 1.744), normal: (-0.197354, 0.348226, 0.9164)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (875.242, -397.075, 0.098), normal: (0.349902, 0.371134, 0.860133)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (887.324, -399.88, 3.742), normal: (0.426889, -0.385623, 0.817961)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (885.448, -406.225, -0.5355), normal: (-0.412668, -0.169715, 0.894931)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (911.265, -417.133, -0.442), normal: (-0.616388, -0.0344352, 0.786689)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (911.703, -419.125, -8.2505), normal: (0.387227, 0.808103, -0.443875)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (911.686, -426.618, 0.393), normal: (-0.554687, 0.144018, 0.8195)
protocols.membrane.geometry.Embedding: Total Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (893.439, -410.747, -0.464429), normal: (-0.128143, 0.224628, 0.965982)
protocols.moves.RigidBodyMover: Translate: Jump (before): RT 0.762535 0.638599 -0.103597 -0.146098 0.013982 -0.989171 -0.630235 0.769413 0.10396 90.687 -863.532 -408.349  
protocols.moves.RigidBodyMover: Translate: Jump (after):  RT 0.762535 0.638599 -0.103597 -0.146098 0.013982 -0.989171 -0.630235 0.769413 0.10396 0.610703 33.3224 24.707  
core.util.switchresiduetypeset: [ WARNING ] When switching to a fa_standard ResidueTypeSet:  Pose already contains fa_standard ResidueTypes.
protocols.jd2.JobDistributor: 3RVY_AB_0001 reported success in 1285 seconds
protocols.jd2.JobDistributor: no more batches to process... 
protocols.jd2.JobDistributor: 10 jobs considered, 1 jobs attempted in 1286 seconds
core.init: Checking for fconfig files in pwd and ./rosetta/flags 
core.init: Rosetta version: 2018.10.post.dev+219.rfalford12.minimalmastermodifications.45420d5 45420d50022f91d2fe940278678c19770a2df5c9 git@github.com:RosettaCommons/main.git 2018-04-19T12:11:21
core.init: command: condor_exec.exe -in:file:s 3RVY_AB/3RVY_AB.pdb -nstruct 10 -score:weights ref2015.wts -mp:setup:spanfiles 3RVY_AB/3RVY_AB.span -packing:pack_missing_sidechains 0 -docking:partners A_B -out:path:all 3RVY_AB
core.init: 'RNG device' seed mode, using '/dev/urandom', seed=1116614755 seed_offset=0 real_seed=1116614755
core.init.random: RandomGenerator:init: Normal mode, seed=1116614755 RG_type=mt19937
core.init: Resolved executable path: /home/ralford/apps/Rosetta-stable/main/source/build/src/debug/linux/3.10/64/x86/gcc/4.8/default/docking_prepack_protocol.default.linuxgccdebug
core.init: Looking for database based on location of executable: /home/ralford/apps/Rosetta-stable/main/database/
core.scoring.etable: Starting energy table calculation
core.scoring.etable: smooth_etable: changing atr/rep split to bottom of energy well
core.scoring.etable: smooth_etable: spline smoothing lj etables (maxdis = 6)
core.scoring.etable: smooth_etable: spline smoothing solvation etables (max_dis = 6)
core.scoring.etable: Finished calculating energy tables.
basic.io.database: Database file opened: scoring/score_functions/PairEPotential/pdb_pair_stats_fine
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBPoly1D.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBFadeIntervals.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBEval.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/DonStrength.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/AccStrength.csv
core.scoring.ScoreFunctionFactory: SCOREFUNCTION: ref2015.wts
core.chemical.GlobalResidueTypeSet: Finished initializing fa_standard residue type set.  Created 603 residue types
core.chemical.GlobalResidueTypeSet: Total time to initialize 14.52 seconds.
basic.io.database: Database file opened: scoring/score_functions/rama/fd/all.ramaProb
basic.io.database: Database file opened: scoring/score_functions/rama/fd/prepro.ramaProb
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.all.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.gly.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.pro.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.valile.txt
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/P_AA
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/P_AA_n
core.scoring.P_AA: shapovalov_lib::shap_p_aa_pp_smooth_level of 1( aka low_smooth ) got activated.
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/shapovalov/10deg/kappa131/a20.prop
protocols.jd2.PDBJobInputter: Instantiate PDBJobInputter
protocols.jd2.PDBJobInputter: PDBJobInputter::fill_jobs
protocols.jd2.PDBJobInputter: pushed 3RVY_AB/3RVY_AB.pdb nstruct indices 1 - 10
protocols.evaluation.ChiWellRmsdEvaluatorCreator: Evaluation Creator active ... 
protocols.jd2.JobDistributor: no more batches to process... 
protocols.jd2.JobDistributor: 10 jobs considered, 0 jobs attempted in 0 seconds
protocols.jd2.JobDistributor: no jobs were attempted, did you forget to pass -overwrite?
core.init: Checking for fconfig files in pwd and ./rosetta/flags 
core.init: Rosetta version: 2018.10.post.dev+219.rfalford12.minimalmastermodifications.45420d5 45420d50022f91d2fe940278678c19770a2df5c9 git@github.com:RosettaCommons/main.git 2018-04-19T12:11:21
core.init: command: condor_exec.exe -in:file:s 3RVY_AB/3RVY_AB.pdb -nstruct 10 -score:weights ref2015.wts -mp:setup:spanfiles 3RVY_AB/3RVY_AB.span -packing:pack_missing_sidechains 0 -docking:partners A_B -out:path:all 3RVY_AB
core.init: 'RNG device' seed mode, using '/dev/urandom', seed=-1537106027 seed_offset=0 real_seed=-1537106027
core.init.random: RandomGenerator:init: Normal mode, seed=-1537106027 RG_type=mt19937
core.init: Resolved executable path: /home/ralford/apps/Rosetta-stable/main/source/build/src/debug/linux/3.10/64/x86/gcc/4.8/default/docking_prepack_protocol.default.linuxgccdebug
core.init: Looking for database based on location of executable: /home/ralford/apps/Rosetta-stable/main/database/
core.scoring.etable: Starting energy table calculation
core.scoring.etable: smooth_etable: changing atr/rep split to bottom of energy well
core.scoring.etable: smooth_etable: spline smoothing lj etables (maxdis = 6)
core.scoring.etable: smooth_etable: spline smoothing solvation etables (max_dis = 6)
core.scoring.etable: Finished calculating energy tables.
basic.io.database: Database file opened: scoring/score_functions/PairEPotential/pdb_pair_stats_fine
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBPoly1D.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBFadeIntervals.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBEval.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/DonStrength.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/AccStrength.csv
core.scoring.ScoreFunctionFactory: SCOREFUNCTION: ref2015.wts
core.chemical.GlobalResidueTypeSet: Finished initializing fa_standard residue type set.  Created 603 residue types
core.chemical.GlobalResidueTypeSet: Total time to initialize 14.76 seconds.
basic.io.database: Database file opened: scoring/score_functions/rama/fd/all.ramaProb
basic.io.database: Database file opened: scoring/score_functions/rama/fd/prepro.ramaProb
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.all.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.gly.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.pro.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.valile.txt
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/P_AA
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/P_AA_n
core.scoring.P_AA: shapovalov_lib::shap_p_aa_pp_smooth_level of 1( aka low_smooth ) got activated.
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/shapovalov/10deg/kappa131/a20.prop
protocols.jd2.PDBJobInputter: Instantiate PDBJobInputter
protocols.jd2.PDBJobInputter: PDBJobInputter::fill_jobs
protocols.jd2.PDBJobInputter: pushed 3RVY_AB/3RVY_AB.pdb nstruct indices 1 - 10
protocols.evaluation.ChiWellRmsdEvaluatorCreator: Evaluation Creator active ... 
protocols.jd2.JobDistributor: no more batches to process... 
protocols.jd2.JobDistributor: 10 jobs considered, 0 jobs attempted in 0 seconds
protocols.jd2.JobDistributor: no jobs were attempted, did you forget to pass -overwrite?
core.init: Checking for fconfig files in pwd and ./rosetta/flags 
core.init: Rosetta version: 2018.10.post.dev+219.rfalford12.minimalmastermodifications.45420d5 45420d50022f91d2fe940278678c19770a2df5c9 git@github.com:RosettaCommons/main.git 2018-04-19T12:11:21
core.init: command: condor_exec.exe -in:file:s 3RVY_AB/3RVY_AB.pdb -nstruct 10 -score:weights ref2015.wts -mp:setup:spanfiles 3RVY_AB/3RVY_AB.span -packing:pack_missing_sidechains 0 -docking:partners A_B -out:path:all 3RVY_AB
core.init: 'RNG device' seed mode, using '/dev/urandom', seed=-314666472 seed_offset=0 real_seed=-314666472
core.init.random: RandomGenerator:init: Normal mode, seed=-314666472 RG_type=mt19937
core.init: Resolved executable path: /home/ralford/apps/Rosetta-stable/main/source/build/src/debug/linux/3.10/64/x86/gcc/4.8/default/docking_prepack_protocol.default.linuxgccdebug
core.init: Looking for database based on location of executable: /home/ralford/apps/Rosetta-stable/main/database/
core.scoring.etable: Starting energy table calculation
core.scoring.etable: smooth_etable: changing atr/rep split to bottom of energy well
core.scoring.etable: smooth_etable: spline smoothing lj etables (maxdis = 6)
core.scoring.etable: smooth_etable: spline smoothing solvation etables (max_dis = 6)
core.scoring.etable: Finished calculating energy tables.
basic.io.database: Database file opened: scoring/score_functions/PairEPotential/pdb_pair_stats_fine
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBPoly1D.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBFadeIntervals.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBEval.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/DonStrength.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/AccStrength.csv
core.scoring.ScoreFunctionFactory: SCOREFUNCTION: ref2015.wts
core.chemical.GlobalResidueTypeSet: Finished initializing fa_standard residue type set.  Created 603 residue types
core.chemical.GlobalResidueTypeSet: Total time to initialize 14.36 seconds.
basic.io.database: Database file opened: scoring/score_functions/rama/fd/all.ramaProb
basic.io.database: Database file opened: scoring/score_functions/rama/fd/prepro.ramaProb
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.all.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.gly.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.pro.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.valile.txt
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/P_AA
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/P_AA_n
core.scoring.P_AA: shapovalov_lib::shap_p_aa_pp_smooth_level of 1( aka low_smooth ) got activated.
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/shapovalov/10deg/kappa131/a20.prop
protocols.jd2.PDBJobInputter: Instantiate PDBJobInputter
protocols.jd2.PDBJobInputter: PDBJobInputter::fill_jobs
protocols.jd2.PDBJobInputter: pushed 3RVY_AB/3RVY_AB.pdb nstruct indices 1 - 10
protocols.evaluation.ChiWellRmsdEvaluatorCreator: Evaluation Creator active ... 
protocols.jd2.PDBJobInputter: PDBJobInputter::pose_from_job
protocols.jd2.PDBJobInputter: filling pose from PDB 3RVY_AB/3RVY_AB.pdb
core.import_pose.import_pose: File '3RVY_AB/3RVY_AB.pdb' automatically determined to be of type PDB
core.conformation.Conformation: [ WARNING ] missing heavyatom:  OXT on residue MET:CtermProteinFull 221
core.conformation.Conformation: [ WARNING ] missing heavyatom:  OXT on residue MET:CtermProteinFull 442
protocols.membrane.AddMembraneMover: =====================================================================
protocols.membrane.AddMembraneMover: ||           WELCOME TO THE WORLD OF MEMBRANE PROTEINS...          ||
protocols.membrane.AddMembraneMover: =====================================================================
protocols.membrane.AddMembraneMover: No membrane residue was found
protocols.membrane.AddMembraneMover: Adding a new membrane residue to the pose
protocols.membrane.AddMembraneMover: Adding a membrane residue representing the position of the membrane after residue 442
protocols.membrane.AddMembraneMover:    Edge   	   Jump     Jump #
          	0443--0001  002
0001--0221
          	0001--0222  001
0222--0442

core.conformation.membrane.SpanningTopology: Filling membrane spanning topology from spanfile 3RVY_AB/3RVY_AB.span
core.conformation.membrane.SpanningTopology: nres: 443
core.conformation.membrane.SpanningTopology: nres_topo: 442
core.conformation.membrane.SpanningTopology: total residues in spanfile: 442
core.conformation.membrane.SpanningTopology: Pose is in pose numbering scheme.
core.conformation.membrane.SpanningTopology: Total # of TM spans: 14
core.conformation.membrane.SpanningTopology: Number of residues in spanfile: 442
core.conformation.membrane.SpanningTopology: Span 1: start: 13, end: 31 orientation: 1
core.conformation.membrane.SpanningTopology: Span 2: start: 43, end: 65 orientation: 1
core.conformation.membrane.SpanningTopology: Span 3: start: 75, end: 88 orientation: 1
core.conformation.membrane.SpanningTopology: Span 4: start: 97, end: 111 orientation: 1
core.conformation.membrane.SpanningTopology: Span 5: start: 126, end: 150 orientation: 1
core.conformation.membrane.SpanningTopology: Span 6: start: 163, end: 174 orientation: 1
core.conformation.membrane.SpanningTopology: Span 7: start: 194, end: 216 orientation: 1
core.conformation.membrane.SpanningTopology: Span 8: start: 234, end: 252 orientation: 1
core.conformation.membrane.SpanningTopology: Span 9: start: 264, end: 286 orientation: 1
core.conformation.membrane.SpanningTopology: Span 10: start: 296, end: 309 orientation: 1
core.conformation.membrane.SpanningTopology: Span 11: start: 318, end: 333 orientation: 1
core.conformation.membrane.SpanningTopology: Span 12: start: 347, end: 371 orientation: 1
core.conformation.membrane.SpanningTopology: Span 13: start: 384, end: 395 orientation: 1
core.conformation.membrane.SpanningTopology: Span 14: start: 415, end: 437 orientation: 1
protocols.membrane.AddMembraneMover: MembraneInfo:
protocols.membrane.AddMembraneMover: MembraneInfo: Information about this Membrane Protein
protocols.membrane.AddMembraneMover: Membrane Residue Num: 443
protocols.membrane.AddMembraneMover: Membrane Fold Tree Jump: 2
protocols.membrane.AddMembraneMover: Membrane Thickness: 15
protocols.membrane.AddMembraneMover: Membrane core: 15
protocols.membrane.AddMembraneMover: Membrane Steepness: 10
protocols.membrane.AddMembraneMover: Membrane Spanning Topology 
core.conformation.membrane.SpanningTopology: Total # of TM spans: 14
core.conformation.membrane.SpanningTopology: Number of residues in spanfile: 442
core.conformation.membrane.SpanningTopology: Span 1: start: 13, end: 31 orientation: 1
core.conformation.membrane.SpanningTopology: Span 2: start: 43, end: 65 orientation: 1
core.conformation.membrane.SpanningTopology: Span 3: start: 75, end: 88 orientation: 1
core.conformation.membrane.SpanningTopology: Span 4: start: 97, end: 111 orientation: 1
core.conformation.membrane.SpanningTopology: Span 5: start: 126, end: 150 orientation: 1
core.conformation.membrane.SpanningTopology: Span 6: start: 163, end: 174 orientation: 1
core.conformation.membrane.SpanningTopology: Span 7: start: 194, end: 216 orientation: 1
core.conformation.membrane.SpanningTopology: Span 8: start: 234, end: 252 orientation: 1
core.conformation.membrane.SpanningTopology: Span 9: start: 264, end: 286 orientation: 1
core.conformation.membrane.SpanningTopology: Span 10: start: 296, end: 309 orientation: 1
core.conformation.membrane.SpanningTopology: Span 11: start: 318, end: 333 orientation: 1
core.conformation.membrane.SpanningTopology: Span 12: start: 347, end: 371 orientation: 1
core.conformation.membrane.SpanningTopology: Span 13: start: 384, end: 395 orientation: 1
core.conformation.membrane.SpanningTopology: Span 14: start: 415, end: 437 orientation: 1
protocols.membrane.SetMembranePositionMover: Calling SetMembranePositionMover
protocols.membrane.SetMembranePositionMover: Starting foldtree: Is membrane fixed? 1
protocols.membrane.SetMembranePositionMover:    Edge   	   Jump     Jump #
          	0443--0001  002
0001--0221
          	0001--0222  001
0222--0442

protocols.membrane.SetMembranePositionMover: Final foldtree: Is membrane fixed? 1
protocols.membrane.SetMembranePositionMover:    Edge   	   Jump     Jump #
          	0443--0001  002
0001--0221
          	0001--0222  001
0222--0442

protocols.membrane.AddMembraneMover: Final foldtree: Is membrane fixed? 1
protocols.membrane.AddMembraneMover:    Edge   	   Jump     Jump #
          	0443--0001  002
0001--0221
          	0001--0222  001
0222--0442

protocols.membrane.util: chainid 1 chain A
protocols.membrane.util: com (21.3245, 7.20909, 0.0943056)
protocols.membrane.util: chainid 2 chain B
protocols.membrane.util: com (-7.30665, 21.3049, 0.155219)
protocols.membrane.util: partners A_B
protocols.membrane.util: mem rsd 443
protocols.membrane.util: anchors[1] 104
protocols.membrane.util:    Edge   	   Jump     Jump #
          	0443--0104  001
0104--0221
          	0104--0325  002
0325--0442
0325--0222
0104--0001

core.conformation.membrane.MembraneInfo: Setting a new membrane jump number in MembraneInfo to 1.
core.conformation.membrane.MembraneInfo: Use with caution!
core.scoring.etable: Starting energy table calculation
core.scoring.etable: smooth_etable: changing atr/rep split to bottom of energy well
core.scoring.etable: smooth_etable: spline smoothing lj etables (maxdis = 6)
core.scoring.etable: smooth_etable: spline smoothing solvation etables (max_dis = 6)
core.scoring.etable: Finished calculating energy tables.
core.scoring.etable: Using alternate parameters: LK_DGFREE in MembEtable construction.
core.scoring.etable: Using alternate parameters: MEMB_LK_DGFREE in MembEtable construction.
core.scoring.etable: Using alternate parameters: LK_DGREFCE in MembEtable construction.
core.scoring.etable: Using alternate parameters: MEMB_LK_DGREFCE in MembEtable construction.
core.scoring.etable: Starting membrane specific energy table calculation
core.scoring.etable: smooth_etable: spline smoothing solvation etables (max_dis = 6)
core.scoring.etable: Finished calculating membrane specific energy tables.
basic.io.database: Database file opened: scoring/score_functions/MembranePotential/CEN10_Menv_smooth_log.txt
core.scoring.ramachandran: shapovalov_lib::shap_rama_smooth_level of 4( aka highest_smooth ) got activated.
basic.io.database: Database file opened: scoring/score_functions/rama/shapovalov/kappa25/all.ramaProb
protocols.membrane.geometry.Embedding: Constructing Embedding object from topology and pose
protocols.membrane.geometry.Embedding: Computing membrane embedding from TMspans: 
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 13 to 31
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 13 to 31
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 43 to 65
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 75 to 88
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 97 to 111
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 126 to 150
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 163 to 174
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] If your starting PDB is already translated into the 
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] membrane, then your TMspan does not span the membrane!
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 194 to 216
protocols.membrane.geometry.Embedding: Span Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (23.842, 30.034, 1.604), normal: (0.347345, 0.19503, 0.917232)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (35.925, 26.105, 0.086), normal: (0.366454, -0.352435, 0.861104)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (33.017, 13.98, 3.6605), normal: (-0.3737, -0.425654, 0.824116)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (26.599, 14.126, -0.9635), normal: (-0.202301, 0.296661, 0.933309)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (15.8745, -9.895, -0.378), normal: (-0.032711, 0.616025, 0.787048)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (13.787, -10.32, -8.284), normal: (0.802362, -0.392734, -0.449416)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (6.2055, -10.1465, 0.1595), normal: (0.142286, 0.562969, 0.814138)
protocols.membrane.geometry.Embedding: Total Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (22.1786, 7.69764, -0.587929), normal: (0.217356, 0.1035, 0.97059)
protocols.membrane.geometry.Embedding: Constructing Embedding object from topology and pose
protocols.membrane.geometry.Embedding: Computing membrane embedding from TMspans: 
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 234 to 252
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 234 to 252
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 264 to 286
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 296 to 309
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 318 to 333
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 347 to 371
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 384 to 395
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] If your starting PDB is already translated into the 
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] membrane, then your TMspan does not span the membrane!
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 415 to 437
protocols.membrane.geometry.Embedding: Span Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-30.0215, 23.7555, 1.744), normal: (-0.197354, 0.348226, 0.9164)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-26.184, 35.8585, 0.098), normal: (0.349902, 0.371134, 0.860133)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-14.102, 33.053, 3.742), normal: (0.426889, -0.385623, 0.817961)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-15.9785, 26.708, -0.5355), normal: (-0.412668, -0.169715, 0.894931)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (9.8385, 15.8005, -0.442), normal: (-0.616388, -0.0344352, 0.786689)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (10.277, 13.8085, -8.2505), normal: (0.387227, 0.808103, -0.443875)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (10.2595, 6.315, 0.393), normal: (-0.554687, 0.144018, 0.8195)
protocols.membrane.geometry.Embedding: Total Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-7.98729, 22.1856, -0.464429), normal: (-0.128143, 0.224628, 0.965982)
protocols.moves.RigidBodyMover: Translate: Jump (before): RT 0.762535 0.638599 -0.103597 -0.146098 0.013982 -0.989171 -0.630235 0.769413 0.10396 0.610703 33.3224 24.707  
protocols.moves.RigidBodyMover: Translate: Jump (after):  RT 0.762535 0.638599 -0.103597 -0.146098 0.013982 -0.989171 -0.630235 0.769413 0.10396 90.687 -863.532 -408.349  
core.pack.task: Packer task: initialize from command line() 
basic.io.database: Database file opened: scoring/score_functions/elec_cp_reps.dat
core.scoring.elec.util: Read 40 countpair representative atoms
core.pack.dunbrack.RotamerLibrary: shapovalov_lib_fixes_enable option is true.
core.pack.dunbrack.RotamerLibrary: shapovalov_lib::shap_dun10_smooth_level of 1( aka lowest_smooth ) got activated.
core.pack.dunbrack.RotamerLibrary: Binary rotamer library selected: /home/ralford/apps/Rosetta-stable/main/database/rotamer/shapovalov/StpDwn_0-0-0/Dunbrack10.lib.bin
core.pack.dunbrack.RotamerLibrary: Using Dunbrack library binary file '/home/ralford/apps/Rosetta-stable/main/database/rotamer/shapovalov/StpDwn_0-0-0/Dunbrack10.lib.bin'.
core.pack.dunbrack.RotamerLibrary: Dunbrack 2010 library took 1.56 seconds to load from binary
core.pack.pack_rotamers: built 5077 rotamers at 443 positions.
core.pack.interaction_graph.interaction_graph_factory: Instantiating DensePDInteractionGraph
core.pack.interaction_graph.interaction_graph_factory: IG: 3958500 bytes
core.pack.annealer.FixbbSimAnnealer: pack_rotamers run final: MYLRITNIVESSFFTKFIIYLIVLNGITMGLETSKTFMQSFGVYTTLFNQIVITIFTIEIILRIYVHRISFFKDPWSLFDFFVVAISLVPTSSGFEILRVLRVLRLFRLVTAVPQMRKIVSALISVIPGMLSVIALMTLFFYIFAIMATQLFGERFPEWFGTLGESFYTLFQVMTLESWSMGIVRPLMEVYPYAWVFFIPFIFVVTFVMINLVVAICVDAMMYLRITNIVESSFFTKFIIYLIVLNGITMGLETSKTFMQSFGVYTTLFNQIVITIFTIEIILRIYVHRISFFKDPWSLFDFFVVAISLVPTSSGFEILRVLRVLRLFRLVTAVPQMRKIVSALISVIPGMLSVIALMTLFFYIFAIMATQLFGERFPEWFGTLGESFYTLFQVMTLESWSMGIVRPLMEVYPYAWVFFIPFIFVVTFVMINLVVAICVDAMZ, best_energy: 159.824
protocols.membrane.geometry.Embedding: Constructing Embedding object from topology and pose
protocols.membrane.geometry.Embedding: Computing membrane embedding from TMspans: 
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 13 to 31
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 13 to 31
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 43 to 65
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 75 to 88
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 97 to 111
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 126 to 150
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 163 to 174
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] If your starting PDB is already translated into the 
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] membrane, then your TMspan does not span the membrane!
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 194 to 216
protocols.membrane.geometry.Embedding: Span Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (23.842, 30.034, 1.604), normal: (0.347345, 0.19503, 0.917232)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (35.925, 26.105, 0.086), normal: (0.366454, -0.352435, 0.861104)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (33.017, 13.98, 3.6605), normal: (-0.3737, -0.425654, 0.824116)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (26.599, 14.126, -0.9635), normal: (-0.202301, 0.296661, 0.933309)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (15.8745, -9.895, -0.378), normal: (-0.032711, 0.616025, 0.787048)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (13.787, -10.32, -8.284), normal: (0.802362, -0.392734, -0.449416)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (6.2055, -10.1465, 0.1595), normal: (0.142286, 0.562969, 0.814138)
protocols.membrane.geometry.Embedding: Total Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (22.1786, 7.69764, -0.587929), normal: (0.217356, 0.1035, 0.97059)
protocols.membrane.geometry.Embedding: Constructing Embedding object from topology and pose
protocols.membrane.geometry.Embedding: Computing membrane embedding from TMspans: 
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 234 to 252
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 234 to 252
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 264 to 286
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 296 to 309
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 318 to 333
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 347 to 371
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 384 to 395
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] If your starting PDB is already translated into the 
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] membrane, then your TMspan does not span the membrane!
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 415 to 437
protocols.membrane.geometry.Embedding: Span Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (871.405, -409.178, 1.744), normal: (-0.197354, 0.348226, 0.9164)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (875.242, -397.075, 0.098), normal: (0.349902, 0.371134, 0.860133)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (887.324, -399.88, 3.742), normal: (0.426889, -0.385623, 0.817961)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (885.448, -406.225, -0.5355), normal: (-0.412668, -0.169715, 0.894931)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (911.265, -417.133, -0.442), normal: (-0.616388, -0.0344352, 0.786689)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (911.703, -419.125, -8.2505), normal: (0.387227, 0.808103, -0.443875)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (911.686, -426.618, 0.393), normal: (-0.554687, 0.144018, 0.8195)
protocols.membrane.geometry.Embedding: Total Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (893.439, -410.747, -0.464429), normal: (-0.128143, 0.224628, 0.965982)
protocols.moves.RigidBodyMover: Translate: Jump (before): RT 0.762535 0.638599 -0.103597 -0.146098 0.013982 -0.989171 -0.630235 0.769413 0.10396 90.687 -863.532 -408.349  
protocols.moves.RigidBodyMover: Translate: Jump (after):  RT 0.762535 0.638599 -0.103597 -0.146098 0.013982 -0.989171 -0.630235 0.769413 0.10396 0.610703 33.3224 24.707  
core.util.switchresiduetypeset: [ WARNING ] When switching to a fa_standard ResidueTypeSet:  Pose already contains fa_standard ResidueTypes.
protocols.jd2.JobDistributor: 3RVY_AB_0001 reported success in 1326 seconds
protocols.jd2.JobDistributor: no more batches to process... 
protocols.jd2.JobDistributor: 10 jobs considered, 1 jobs attempted in 1327 seconds
core.init: Checking for fconfig files in pwd and ./rosetta/flags 
core.init: Rosetta version: 2018.10.post.dev+219.rfalford12.minimalmastermodifications.45420d5 45420d50022f91d2fe940278678c19770a2df5c9 git@github.com:RosettaCommons/main.git 2018-04-19T12:11:21
core.init: command: condor_exec.exe -in:file:s 3RVY_AB/3RVY_AB.pdb -nstruct 10 -score:weights ref2015.wts -mp:setup:spanfiles 3RVY_AB/3RVY_AB.span -packing:pack_missing_sidechains 0 -docking:partners A_B -out:path:all 3RVY_AB
core.init: 'RNG device' seed mode, using '/dev/urandom', seed=-31678092 seed_offset=0 real_seed=-31678092
core.init.random: RandomGenerator:init: Normal mode, seed=-31678092 RG_type=mt19937
core.init: Resolved executable path: /home/ralford/apps/Rosetta-stable/main/source/build/src/debug/linux/3.10/64/x86/gcc/4.8/default/docking_prepack_protocol.default.linuxgccdebug
core.init: Looking for database based on location of executable: /home/ralford/apps/Rosetta-stable/main/database/
core.scoring.etable: Starting energy table calculation
core.scoring.etable: smooth_etable: changing atr/rep split to bottom of energy well
core.scoring.etable: smooth_etable: spline smoothing lj etables (maxdis = 6)
core.scoring.etable: smooth_etable: spline smoothing solvation etables (max_dis = 6)
core.scoring.etable: Finished calculating energy tables.
basic.io.database: Database file opened: scoring/score_functions/PairEPotential/pdb_pair_stats_fine
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBPoly1D.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBFadeIntervals.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBEval.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/DonStrength.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/AccStrength.csv
core.scoring.ScoreFunctionFactory: SCOREFUNCTION: ref2015.wts
core.chemical.GlobalResidueTypeSet: Finished initializing fa_standard residue type set.  Created 603 residue types
core.chemical.GlobalResidueTypeSet: Total time to initialize 14.34 seconds.
basic.io.database: Database file opened: scoring/score_functions/rama/fd/all.ramaProb
basic.io.database: Database file opened: scoring/score_functions/rama/fd/prepro.ramaProb
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.all.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.gly.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.pro.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.valile.txt
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/P_AA
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/P_AA_n
core.scoring.P_AA: shapovalov_lib::shap_p_aa_pp_smooth_level of 1( aka low_smooth ) got activated.
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/shapovalov/10deg/kappa131/a20.prop
protocols.jd2.PDBJobInputter: Instantiate PDBJobInputter
protocols.jd2.PDBJobInputter: PDBJobInputter::fill_jobs
protocols.jd2.PDBJobInputter: pushed 3RVY_AB/3RVY_AB.pdb nstruct indices 1 - 10
protocols.evaluation.ChiWellRmsdEvaluatorCreator: Evaluation Creator active ... 
protocols.jd2.PDBJobInputter: PDBJobInputter::pose_from_job
protocols.jd2.PDBJobInputter: filling pose from PDB 3RVY_AB/3RVY_AB.pdb
core.import_pose.import_pose: File '3RVY_AB/3RVY_AB.pdb' automatically determined to be of type PDB
core.conformation.Conformation: [ WARNING ] missing heavyatom:  OXT on residue MET:CtermProteinFull 221
core.conformation.Conformation: [ WARNING ] missing heavyatom:  OXT on residue MET:CtermProteinFull 442
protocols.membrane.AddMembraneMover: =====================================================================
protocols.membrane.AddMembraneMover: ||           WELCOME TO THE WORLD OF MEMBRANE PROTEINS...          ||
protocols.membrane.AddMembraneMover: =====================================================================
protocols.membrane.AddMembraneMover: No membrane residue was found
protocols.membrane.AddMembraneMover: Adding a new membrane residue to the pose
protocols.membrane.AddMembraneMover: Adding a membrane residue representing the position of the membrane after residue 442
protocols.membrane.AddMembraneMover:    Edge   	   Jump     Jump #
          	0443--0001  002
0001--0221
          	0001--0222  001
0222--0442

core.conformation.membrane.SpanningTopology: Filling membrane spanning topology from spanfile 3RVY_AB/3RVY_AB.span
core.conformation.membrane.SpanningTopology: nres: 443
core.conformation.membrane.SpanningTopology: nres_topo: 442
core.conformation.membrane.SpanningTopology: total residues in spanfile: 442
core.conformation.membrane.SpanningTopology: Pose is in pose numbering scheme.
core.conformation.membrane.SpanningTopology: Total # of TM spans: 14
core.conformation.membrane.SpanningTopology: Number of residues in spanfile: 442
core.conformation.membrane.SpanningTopology: Span 1: start: 13, end: 31 orientation: 1
core.conformation.membrane.SpanningTopology: Span 2: start: 43, end: 65 orientation: 1
core.conformation.membrane.SpanningTopology: Span 3: start: 75, end: 88 orientation: 1
core.conformation.membrane.SpanningTopology: Span 4: start: 97, end: 111 orientation: 1
core.conformation.membrane.SpanningTopology: Span 5: start: 126, end: 150 orientation: 1
core.conformation.membrane.SpanningTopology: Span 6: start: 163, end: 174 orientation: 1
core.conformation.membrane.SpanningTopology: Span 7: start: 194, end: 216 orientation: 1
core.conformation.membrane.SpanningTopology: Span 8: start: 234, end: 252 orientation: 1
core.conformation.membrane.SpanningTopology: Span 9: start: 264, end: 286 orientation: 1
core.conformation.membrane.SpanningTopology: Span 10: start: 296, end: 309 orientation: 1
core.conformation.membrane.SpanningTopology: Span 11: start: 318, end: 333 orientation: 1
core.conformation.membrane.SpanningTopology: Span 12: start: 347, end: 371 orientation: 1
core.conformation.membrane.SpanningTopology: Span 13: start: 384, end: 395 orientation: 1
core.conformation.membrane.SpanningTopology: Span 14: start: 415, end: 437 orientation: 1
protocols.membrane.AddMembraneMover: MembraneInfo:
protocols.membrane.AddMembraneMover: MembraneInfo: Information about this Membrane Protein
protocols.membrane.AddMembraneMover: Membrane Residue Num: 443
protocols.membrane.AddMembraneMover: Membrane Fold Tree Jump: 2
protocols.membrane.AddMembraneMover: Membrane Thickness: 15
protocols.membrane.AddMembraneMover: Membrane core: 15
protocols.membrane.AddMembraneMover: Membrane Steepness: 10
protocols.membrane.AddMembraneMover: Membrane Spanning Topology 
core.conformation.membrane.SpanningTopology: Total # of TM spans: 14
core.conformation.membrane.SpanningTopology: Number of residues in spanfile: 442
core.conformation.membrane.SpanningTopology: Span 1: start: 13, end: 31 orientation: 1
core.conformation.membrane.SpanningTopology: Span 2: start: 43, end: 65 orientation: 1
core.conformation.membrane.SpanningTopology: Span 3: start: 75, end: 88 orientation: 1
core.conformation.membrane.SpanningTopology: Span 4: start: 97, end: 111 orientation: 1
core.conformation.membrane.SpanningTopology: Span 5: start: 126, end: 150 orientation: 1
core.conformation.membrane.SpanningTopology: Span 6: start: 163, end: 174 orientation: 1
core.conformation.membrane.SpanningTopology: Span 7: start: 194, end: 216 orientation: 1
core.conformation.membrane.SpanningTopology: Span 8: start: 234, end: 252 orientation: 1
core.conformation.membrane.SpanningTopology: Span 9: start: 264, end: 286 orientation: 1
core.conformation.membrane.SpanningTopology: Span 10: start: 296, end: 309 orientation: 1
core.conformation.membrane.SpanningTopology: Span 11: start: 318, end: 333 orientation: 1
core.conformation.membrane.SpanningTopology: Span 12: start: 347, end: 371 orientation: 1
core.conformation.membrane.SpanningTopology: Span 13: start: 384, end: 395 orientation: 1
core.conformation.membrane.SpanningTopology: Span 14: start: 415, end: 437 orientation: 1
protocols.membrane.SetMembranePositionMover: Calling SetMembranePositionMover
protocols.membrane.SetMembranePositionMover: Starting foldtree: Is membrane fixed? 1
protocols.membrane.SetMembranePositionMover:    Edge   	   Jump     Jump #
          	0443--0001  002
0001--0221
          	0001--0222  001
0222--0442

protocols.membrane.SetMembranePositionMover: Final foldtree: Is membrane fixed? 1
protocols.membrane.SetMembranePositionMover:    Edge   	   Jump     Jump #
          	0443--0001  002
0001--0221
          	0001--0222  001
0222--0442

protocols.membrane.AddMembraneMover: Final foldtree: Is membrane fixed? 1
protocols.membrane.AddMembraneMover:    Edge   	   Jump     Jump #
          	0443--0001  002
0001--0221
          	0001--0222  001
0222--0442

protocols.membrane.util: chainid 1 chain A
protocols.membrane.util: com (21.3245, 7.20909, 0.0943056)
protocols.membrane.util: chainid 2 chain B
protocols.membrane.util: com (-7.30665, 21.3049, 0.155219)
protocols.membrane.util: partners A_B
protocols.membrane.util: mem rsd 443
protocols.membrane.util: anchors[1] 104
protocols.membrane.util:    Edge   	   Jump     Jump #
          	0443--0104  001
0104--0221
          	0104--0325  002
0325--0442
0325--0222
0104--0001

core.conformation.membrane.MembraneInfo: Setting a new membrane jump number in MembraneInfo to 1.
core.conformation.membrane.MembraneInfo: Use with caution!
core.scoring.etable: Starting energy table calculation
core.scoring.etable: smooth_etable: changing atr/rep split to bottom of energy well
core.scoring.etable: smooth_etable: spline smoothing lj etables (maxdis = 6)
core.scoring.etable: smooth_etable: spline smoothing solvation etables (max_dis = 6)
core.scoring.etable: Finished calculating energy tables.
core.scoring.etable: Using alternate parameters: LK_DGFREE in MembEtable construction.
core.scoring.etable: Using alternate parameters: MEMB_LK_DGFREE in MembEtable construction.
core.scoring.etable: Using alternate parameters: LK_DGREFCE in MembEtable construction.
core.scoring.etable: Using alternate parameters: MEMB_LK_DGREFCE in MembEtable construction.
core.scoring.etable: Starting membrane specific energy table calculation
core.scoring.etable: smooth_etable: spline smoothing solvation etables (max_dis = 6)
core.scoring.etable: Finished calculating membrane specific energy tables.
basic.io.database: Database file opened: scoring/score_functions/MembranePotential/CEN10_Menv_smooth_log.txt
core.scoring.ramachandran: shapovalov_lib::shap_rama_smooth_level of 4( aka highest_smooth ) got activated.
basic.io.database: Database file opened: scoring/score_functions/rama/shapovalov/kappa25/all.ramaProb
protocols.membrane.geometry.Embedding: Constructing Embedding object from topology and pose
protocols.membrane.geometry.Embedding: Computing membrane embedding from TMspans: 
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 13 to 31
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 13 to 31
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 43 to 65
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 75 to 88
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 97 to 111
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 126 to 150
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 163 to 174
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] If your starting PDB is already translated into the 
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] membrane, then your TMspan does not span the membrane!
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 194 to 216
protocols.membrane.geometry.Embedding: Span Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (23.842, 30.034, 1.604), normal: (0.347345, 0.19503, 0.917232)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (35.925, 26.105, 0.086), normal: (0.366454, -0.352435, 0.861104)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (33.017, 13.98, 3.6605), normal: (-0.3737, -0.425654, 0.824116)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (26.599, 14.126, -0.9635), normal: (-0.202301, 0.296661, 0.933309)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (15.8745, -9.895, -0.378), normal: (-0.032711, 0.616025, 0.787048)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (13.787, -10.32, -8.284), normal: (0.802362, -0.392734, -0.449416)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (6.2055, -10.1465, 0.1595), normal: (0.142286, 0.562969, 0.814138)
protocols.membrane.geometry.Embedding: Total Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (22.1786, 7.69764, -0.587929), normal: (0.217356, 0.1035, 0.97059)
protocols.membrane.geometry.Embedding: Constructing Embedding object from topology and pose
protocols.membrane.geometry.Embedding: Computing membrane embedding from TMspans: 
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 234 to 252
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 234 to 252
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 264 to 286
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 296 to 309
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 318 to 333
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 347 to 371
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 384 to 395
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] If your starting PDB is already translated into the 
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] membrane, then your TMspan does not span the membrane!
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 415 to 437
protocols.membrane.geometry.Embedding: Span Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-30.0215, 23.7555, 1.744), normal: (-0.197354, 0.348226, 0.9164)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-26.184, 35.8585, 0.098), normal: (0.349902, 0.371134, 0.860133)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-14.102, 33.053, 3.742), normal: (0.426889, -0.385623, 0.817961)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-15.9785, 26.708, -0.5355), normal: (-0.412668, -0.169715, 0.894931)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (9.8385, 15.8005, -0.442), normal: (-0.616388, -0.0344352, 0.786689)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (10.277, 13.8085, -8.2505), normal: (0.387227, 0.808103, -0.443875)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (10.2595, 6.315, 0.393), normal: (-0.554687, 0.144018, 0.8195)
protocols.membrane.geometry.Embedding: Total Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (-7.98729, 22.1856, -0.464429), normal: (-0.128143, 0.224628, 0.965982)
protocols.moves.RigidBodyMover: Translate: Jump (before): RT 0.762535 0.638599 -0.103597 -0.146098 0.013982 -0.989171 -0.630235 0.769413 0.10396 0.610703 33.3224 24.707  
protocols.moves.RigidBodyMover: Translate: Jump (after):  RT 0.762535 0.638599 -0.103597 -0.146098 0.013982 -0.989171 -0.630235 0.769413 0.10396 90.687 -863.532 -408.349  
core.pack.task: Packer task: initialize from command line() 
basic.io.database: Database file opened: scoring/score_functions/elec_cp_reps.dat
core.scoring.elec.util: Read 40 countpair representative atoms
core.pack.dunbrack.RotamerLibrary: shapovalov_lib_fixes_enable option is true.
core.pack.dunbrack.RotamerLibrary: shapovalov_lib::shap_dun10_smooth_level of 1( aka lowest_smooth ) got activated.
core.pack.dunbrack.RotamerLibrary: Binary rotamer library selected: /home/ralford/apps/Rosetta-stable/main/database/rotamer/shapovalov/StpDwn_0-0-0/Dunbrack10.lib.bin
core.pack.dunbrack.RotamerLibrary: Using Dunbrack library binary file '/home/ralford/apps/Rosetta-stable/main/database/rotamer/shapovalov/StpDwn_0-0-0/Dunbrack10.lib.bin'.
core.pack.dunbrack.RotamerLibrary: Dunbrack 2010 library took 1.53 seconds to load from binary
core.pack.pack_rotamers: built 5077 rotamers at 443 positions.
core.pack.interaction_graph.interaction_graph_factory: Instantiating DensePDInteractionGraph
core.pack.interaction_graph.interaction_graph_factory: IG: 3958500 bytes
core.pack.annealer.FixbbSimAnnealer: pack_rotamers run final: MYLRITNIVESSFFTKFIIYLIVLNGITMGLETSKTFMQSFGVYTTLFNQIVITIFTIEIILRIYVHRISFFKDPWSLFDFFVVAISLVPTSSGFEILRVLRVLRLFRLVTAVPQMRKIVSALISVIPGMLSVIALMTLFFYIFAIMATQLFGERFPEWFGTLGESFYTLFQVMTLESWSMGIVRPLMEVYPYAWVFFIPFIFVVTFVMINLVVAICVDAMMYLRITNIVESSFFTKFIIYLIVLNGITMGLETSKTFMQSFGVYTTLFNQIVITIFTIEIILRIYVHRISFFKDPWSLFDFFVVAISLVPTSSGFEILRVLRVLRLFRLVTAVPQMRKIVSALISVIPGMLSVIALMTLFFYIFAIMATQLFGERFPEWFGTLGESFYTLFQVMTLESWSMGIVRPLMEVYPYAWVFFIPFIFVVTFVMINLVVAICVDAMZ, best_energy: 161.032
protocols.membrane.geometry.Embedding: Constructing Embedding object from topology and pose
protocols.membrane.geometry.Embedding: Computing membrane embedding from TMspans: 
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 13 to 31
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 13 to 31
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 43 to 65
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 75 to 88
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 97 to 111
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 126 to 150
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 163 to 174
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] If your starting PDB is already translated into the 
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] membrane, then your TMspan does not span the membrane!
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 194 to 216
protocols.membrane.geometry.Embedding: Span Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (23.842, 30.034, 1.604), normal: (0.347345, 0.19503, 0.917232)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (35.925, 26.105, 0.086), normal: (0.366454, -0.352435, 0.861104)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (33.017, 13.98, 3.6605), normal: (-0.3737, -0.425654, 0.824116)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (26.599, 14.126, -0.9635), normal: (-0.202301, 0.296661, 0.933309)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (15.8745, -9.895, -0.378), normal: (-0.032711, 0.616025, 0.787048)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (13.787, -10.32, -8.284), normal: (0.802362, -0.392734, -0.449416)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (6.2055, -10.1465, 0.1595), normal: (0.142286, 0.562969, 0.814138)
protocols.membrane.geometry.Embedding: Total Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (22.1786, 7.69764, -0.587929), normal: (0.217356, 0.1035, 0.97059)
protocols.membrane.geometry.Embedding: Constructing Embedding object from topology and pose
protocols.membrane.geometry.Embedding: Computing membrane embedding from TMspans: 
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 234 to 252
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 234 to 252
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 264 to 286
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 296 to 309
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 318 to 333
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 347 to 371
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 384 to 395
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] If your starting PDB is already translated into the 
protocols.membrane.geometry.EmbeddingDef: [ WARNING ] membrane, then your TMspan does not span the membrane!
protocols.membrane.geometry.EmbeddingDef: Computing membrane embedding from TMspan 415 to 437
protocols.membrane.geometry.Embedding: Span Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (871.405, -409.178, 1.744), normal: (-0.197354, 0.348226, 0.9164)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (875.242, -397.075, 0.098), normal: (0.349902, 0.371134, 0.860133)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (887.324, -399.88, 3.742), normal: (0.426889, -0.385623, 0.817961)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (885.448, -406.225, -0.5355), normal: (-0.412668, -0.169715, 0.894931)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (911.265, -417.133, -0.442), normal: (-0.616388, -0.0344352, 0.786689)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (911.703, -419.125, -8.2505), normal: (0.387227, 0.808103, -0.443875)
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (911.686, -426.618, 0.393), normal: (-0.554687, 0.144018, 0.8195)
protocols.membrane.geometry.Embedding: Total Embedding: 
protocols.membrane.geometry.EmbeddingDef: Embedding: center: (893.439, -410.747, -0.464429), normal: (-0.128143, 0.224628, 0.965982)
protocols.moves.RigidBodyMover: Translate: Jump (before): RT 0.762535 0.638599 -0.103597 -0.146098 0.013982 -0.989171 -0.630235 0.769413 0.10396 90.687 -863.532 -408.349  
protocols.moves.RigidBodyMover: Translate: Jump (after):  RT 0.762535 0.638599 -0.103597 -0.146098 0.013982 -0.989171 -0.630235 0.769413 0.10396 0.610703 33.3224 24.707  
core.util.switchresiduetypeset: [ WARNING ] When switching to a fa_standard ResidueTypeSet:  Pose already contains fa_standard ResidueTypes.
protocols.jd2.JobDistributor: 3RVY_AB_0001 reported success in 1493 seconds
protocols.jd2.JobDistributor: no more batches to process... 
protocols.jd2.JobDistributor: 10 jobs considered, 1 jobs attempted in 1494 seconds
